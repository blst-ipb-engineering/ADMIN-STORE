{"ast":null,"code":"import _defineProperty from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bagus/Documents/GitHub/ADMIN-STORE/src/layouts/Login/Login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actionCreator from '../../store/action/index';\nimport Spinner from '../../components/Spinner/Spinner';\nimport { Card, CardHeader, CardBody, Input, CardTitle, Row, Col } from \"reactstrap\"; // import kelas from './Login.css';\n// import FormInputs from '../../components/FormInputs/FormInputs';\n\nimport Button from \"../../components/CustomButton/CustomButton.jsx\";\nimport { Redirect } from 'react-router-dom'; // Auth\n// import * as actions from '../../store/action/index';\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      controls: {\n        email: {\n          value: ''\n        },\n        password: {\n          value: ''\n        }\n      },\n      isSignUp: false,\n      emailValid: false\n    };\n\n    _this.submitHandler = function (event) {\n      event.preventDefault(); //triger action untuk check email\n\n      if (_this.props.email === null) {\n        _this.props.onCheckEmail(_this.state.controls.email.value, _this.state.controls.password.value);\n      } // jika email benar maka handling ke password\n\n\n      if (_this.props.emailVal) {\n        _this.props.onCheckPassword(_this.state.controls.email.value, _this.state.controls.password.value);\n      }\n    };\n\n    _this.inputChangeHandler = function (event, controlName) {\n      var updatedControl = _objectSpread({}, _this.state.controls, _defineProperty({}, controlName, _objectSpread({}, _this.state.controls[controlName], {\n        value: event.target.value\n      })));\n\n      _this.setState({\n        controls: updatedControl\n      });\n    };\n\n    _this.swithchHandler = function () {\n      _this.setState(function (oldState) {\n        return {\n          isSignUp: !oldState.isSignUp\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var password = null;\n\n      if (this.props.emailVal) {\n        password = React.createElement(Input, {\n          style: {\n            textAlign: 'center',\n            padding: '20px'\n          },\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          onChange: function onChange(event) {\n            _this2.inputChangeHandler(event, 'password');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        });\n      }\n\n      var notifError = null;\n\n      if (this.props.error !== null) {\n        notifError = React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, this.props.error);\n      }\n\n      var loading = null;\n\n      if (this.props.loading) {\n        loading = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        });\n      }\n\n      var loginForm = null;\n\n      if (this.props.email == null && !this.props.loading) {\n        loginForm = React.createElement(Input, {\n          style: {\n            textAlign: 'center',\n            padding: '20px'\n          },\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Enter email\",\n          onChange: function onChange(event) {\n            _this2.inputChangeHandler(event, 'email');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        });\n      }\n\n      var authRedirect = null;\n      console.log(this.props.isAuth);\n\n      if (this.props.isAuth) {\n        authRedirect = React.createElement(Redirect, {\n          to: \"/dashboard\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, authRedirect, React.createElement(\"div\", {\n        style: {\n          background: 'grey',\n          position: 'absolute',\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(Col, {\n        md: 4,\n        style: {\n          margin: 'auto',\n          paddingTop: '100px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-user text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, loading, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        tag: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.props.email !== null ? 'Password' : 'Log In')), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.submitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, loginForm, password, notifError, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"update ml-auto mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        round: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Sign \", this.state.isSignUp ? 'Up' : 'In'))))))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    emailVal: state.authsd.emailValid,\n    error: state.authsd.error,\n    loading: state.authsd.loading,\n    email: state.authsd.email,\n    isAdmin: state.authsd.inst,\n    isAuth: state.authsd.token !== null\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onCheckEmail: function onCheckEmail(email) {\n      return dispatch(actionCreator.auth(email));\n    },\n    onCheckPassword: function onCheckPassword(email, password) {\n      return dispatch(actionCreator.authPassword(email, password));\n    },\n    onTryAutoSignUp: function onTryAutoSignUp() {\n      return dispatch(actionCreator.authCheckState());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/bagus/Documents/GitHub/ADMIN-STORE/src/layouts/Login/Login.js"],"names":["React","Component","connect","actionCreator","Spinner","Card","CardHeader","CardBody","Input","CardTitle","Row","Col","Button","Redirect","Login","state","controls","email","value","password","isSignUp","emailValid","submitHandler","event","preventDefault","props","onCheckEmail","emailVal","onCheckPassword","inputChangeHandler","controlName","updatedControl","target","setState","swithchHandler","oldState","textAlign","padding","notifError","error","loading","loginForm","authRedirect","console","log","isAuth","background","position","width","height","margin","paddingTop","mapStateToProps","authsd","isAdmin","inst","token","mapDispatchToProps","dispatch","auth","authPassword","onTryAutoSignUp","authCheckState"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actionCreator from '../../store/action/index';\n\nimport Spinner from '../../components/Spinner/Spinner';\nimport { Card, CardHeader, CardBody, Input, CardTitle, Row, Col } from \"reactstrap\";\n// import kelas from './Login.css';\n// import FormInputs from '../../components/FormInputs/FormInputs';\nimport Button from \"../../components/CustomButton/CustomButton.jsx\";\nimport { Redirect } from 'react-router-dom';\n\n\n// Auth\n// import * as actions from '../../store/action/index';\n\n\nclass Login extends Component {\n\n    state ={\n        controls: {\n            email: {value: ''},\n            password: {value: ''}\n        },\n        isSignUp:false,\n        emailValid:false,\n    }\n    \n\n    submitHandler = (event) => {                \n        event.preventDefault();\n        \n        //triger action untuk check email\n        if(this.props.email === null){\n            this.props.onCheckEmail(this.state.controls.email.value,this.state.controls.password.value);\n        }\n        \n        // jika email benar maka handling ke password\n        if(this.props.emailVal){\n            this.props.onCheckPassword(this.state.controls.email.value,this.state.controls.password.value);\n        }\n    };\n\n    inputChangeHandler = (event, controlName) => {             \n        const updatedControl = {\n            ...this.state.controls,\n            [controlName]: {\n                ...this.state.controls[controlName],\n                value:event.target.value\n            }\n        }; \n\n        this.setState({controls:updatedControl})\n    }\n\n    swithchHandler= () => {\n        this.setState(oldState =>{\n            return {isSignUp: !oldState.isSignUp}\n        })\n    }\n   \n    render() {\n        let password = null;\n        if(this.props.emailVal) {\n            password = <Input \n            style={{textAlign:'center',padding:'20px'}} \n            type='password' \n            name='password' \n            placeholder='Password'\n            onChange={(event) => {this.inputChangeHandler(event, 'password')}}\n            ></Input>\n        }\n\n        let notifError = null;\n        if(this.props.error !== null){\n            notifError = <p>{this.props.error}</p>\n        }\n\n        let loading = null;\n        \n        if(this.props.loading){\n            loading = <Spinner></Spinner>;\n        }\n        \n        let loginForm = null;\n        if(this.props.email == null && !this.props.loading ){\n            loginForm = <Input style={{textAlign:'center',padding:'20px'}}\n            type=\"email\"\n            name=\"email\"                                           \n            placeholder=\"Enter email\"\n            onChange={(event) => {this.inputChangeHandler(event, 'email')}}\n            />  \n        }\n\n        let authRedirect = null;\n        console.log(this.props.isAuth)\n        if (this.props.isAuth){\n            authRedirect = <Redirect to=\"/dashboard\" />;\n        }\n\n        return(            \n            <div>\n                {authRedirect}\n                <div style={{background:'grey', position:'absolute', width:'100%', height:'100%'}}></div>      \n                    <Col md={4} style={{margin:'auto',paddingTop:'100px'}}>\n                        <Card className=\"card-user text-center\">\n                    {loading}\n                        <CardHeader>\n                            <CardTitle tag=\"h4\">{this.props.email !== null ? 'Password' : 'Log In'}</CardTitle>                       \n                        </CardHeader>\n                        <CardBody>\n                            <form onSubmit={this.submitHandler}>  \n                                {loginForm}                              \n                                {password}\n                                {notifError}                     \n                                <Row>\n                                    <div className=\"update ml-auto mr-auto\">\n                                    <Button color=\"primary\" round>Sign {this.state.isSignUp ? 'Up' : 'In'}</Button>\n                                    </div>\n                                </Row>\n                            </form>\n                        </CardBody>                                                \n                        </Card>\n                    </Col>                 \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        emailVal : state.authsd.emailValid,\n        error : state.authsd.error,\n        loading : state.authsd.loading,\n        email: state.authsd.email,\n        isAdmin : state.authsd.inst,\n        isAuth: state.authsd.token !== null\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onCheckEmail: (email) => dispatch(actionCreator.auth(email)),\n        onCheckPassword: (email, password)=>dispatch(actionCreator.authPassword(email, password)),\n        onTryAutoSignUp: () => dispatch(actionCreator.authCheckState())\n    }\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from 'axios';\nimport querystring from 'querystring';\nvar HOSTNAME = 'http://localhost:8080';\nvar API_SERVICES = {\n  Login: \"\".concat(HOSTNAME, \"/auth/login\"),\n  CheckEmail: \"\".concat(HOSTNAME, \"/auth/checkemail\"),\n  SignUp: \"\".concat(HOSTNAME, \"/auth/signup\"),\n  ProductIndex: \"\".concat(HOSTNAME, \"/product/index\"),\n  ProductCategoryGeneral: \"\".concat(HOSTNAME, \"/category/general\"),\n  ProductCategory: \"\".concat(HOSTNAME, \"/category\"),\n  CategoryProductLocalAdd: \"\".concat(HOSTNAME, \"/category/add\"),\n  AuthorIndex: \"\".concat(HOSTNAME, \"/author\"),\n  AuthorCreate: \"\".concat(HOSTNAME, \"/author/add\")\n};\n\nvar configFetch = function configFetch(url, method, body) {\n  var isJSON = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var extraHeaders = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  return {\n    method: method,\n    url: url,\n    data: isJSON ? body : querystring.stringify(body),\n    headers: _objectSpread({\n      'Content-Type': isJSON ? 'application/json' : 'application/x-www-form-urlencoded',\n      'Accept': 'application/json'\n    }, extraHeaders)\n  };\n}; // API PRODUCT\n\n\nvar ProductList = function ProductList(content) {\n  var url = API_SERVICES.ProductIndex;\n  return axios(configFetch(url, 'get', content)).then(function (result) {\n    return result.data;\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\n\nvar ProductCategoryGeneral = function ProductCategoryGeneral(content) {\n  var url = API_SERVICES.ProductCategoryGeneral;\n  var extraHeaders = {\n    Authorization: \"Bearer \" + localStorage.getItem('token')\n  };\n  return axios(configFetch(url, 'get', content, true, extraHeaders)).then(function (result) {\n    return result.data;\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\n\nvar ProductCategory = function ProductCategory() {\n  var url = API_SERVICES.ProductCategory;\n  var extraHeaders = {\n    Authorization: \"Bearer \" + localStorage.getItem('token')\n  };\n  return axios(configFetch(url, 'get', null, true, extraHeaders)).then(function (result) {\n    return result.data;\n  }).catch(function (err) {\n    return console.log(err);\n  });\n}; // WRITE NEW PRODUCT LOCAL CATEGORY\n\n\nvar NewCategoryAction = function NewCategoryAction(content) {\n  var url = API_SERVICES.CategoryProductLocalAdd;\n  var extraHeaders = {\n    Authorization: \"Bearer \" + localStorage.getItem('token')\n  };\n  return axios(configFetch(url, 'post', content, true, extraHeaders)).then(function (result) {\n    return result.data;\n  }).catch(function (err) {\n    return console.log(err);\n  });\n}; // AUTHOR\n\n\nvar AuthorIndex = function AuthorIndex(content) {\n  var url = API_SERVICES.AuthorIndex;\n  var extraHeaders = {\n    Authorization: \"Bearer\" + localStorage.getItem('token')\n  };\n  return axios(configFetch(url, 'get', content, true, extraHeaders)).then(function (result) {\n    return result.data;\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\n\nvar AuthorCreate = function AuthorCreate(content) {\n  var url = API_SERVICES.AuthorCreate;\n  var extraHeaders = {\n    Authorization: \"Bearer\" + localStorage.getItem('token')\n  };\n  return axios(configFetch(url, 'post', content, true, extraHeaders)).then(function (result) {\n    return result.data;\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\n\nexport { ProductList, ProductCategoryGeneral, NewCategoryAction, ProductCategory, AuthorIndex, AuthorCreate };","map":{"version":3,"sources":["/Users/bagus/Documents/GitHub/ADMIN-STORE/src/api/index.js"],"names":["axios","querystring","HOSTNAME","API_SERVICES","Login","CheckEmail","SignUp","ProductIndex","ProductCategoryGeneral","ProductCategory","CategoryProductLocalAdd","AuthorIndex","AuthorCreate","configFetch","url","method","body","isJSON","extraHeaders","data","stringify","headers","ProductList","content","then","result","catch","err","console","log","Authorization","localStorage","getItem","NewCategoryAction"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,IAAMC,QAAQ,GAAG,uBAAjB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,YAAMF,QAAN,gBADY;AAEjBG,EAAAA,UAAU,YAAMH,QAAN,qBAFO;AAGjBI,EAAAA,MAAM,YAAMJ,QAAN,iBAHW;AAIjBK,EAAAA,YAAY,YAAML,QAAN,mBAJK;AAKjBM,EAAAA,sBAAsB,YAAMN,QAAN,sBALL;AAMjBO,EAAAA,eAAe,YAAMP,QAAN,cANE;AAOjBQ,EAAAA,uBAAuB,YAAKR,QAAL,kBAPN;AAQjBS,EAAAA,WAAW,YAAKT,QAAL,YARM;AASjBU,EAAAA,YAAY,YAAKV,QAAL;AATK,CAArB;;AAaA,IAAMW,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAMC,MAAN,EAAcC,IAAd;AAAA,MAAoBC,MAApB,uEAA6B,KAA7B;AAAA,MAAoCC,YAApC,uEAAmD,EAAnD;AAAA,SAA2D;AAC3EH,IAAAA,MAAM,EAANA,MAD2E;AAE3ED,IAAAA,GAAG,EAAHA,GAF2E;AAG3EK,IAAAA,IAAI,EAAEF,MAAM,GAAGD,IAAH,GAAUf,WAAW,CAACmB,SAAZ,CAAsBJ,IAAtB,CAHqD;AAI3EK,IAAAA,OAAO;AACL,sBAAgBJ,MAAM,GAAG,kBAAH,GAAwB,mCADzC;AAEL,gBAAU;AAFL,OAGFC,YAHE;AAJoE,GAA3D;AAAA,CAApB,C,CAYE;;;AACA,IAAMI,WAAW,GAAE,SAAbA,WAAa,CAACC,OAAD,EAAa;AAC5B,MAAMT,GAAG,GAAGX,YAAY,CAACI,YAAzB;AACA,SAAOP,KAAK,CAACa,WAAW,CAACC,GAAD,EAAM,KAAN,EAAaS,OAAb,CAAZ,CAAL,CAAwCC,IAAxC,CAA6C,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACN,IAAX;AAAA,GAAnD,EAAoEO,KAApE,CAA0E,UAAAC,GAAG;AAAA,WAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAF;AAAA,GAA7E,CAAP;AACH,CAHD;;AAKA,IAAMnB,sBAAsB,GAAE,SAAxBA,sBAAwB,CAACe,OAAD,EAAa;AACzC,MAAMT,GAAG,GAAGX,YAAY,CAACK,sBAAzB;AACA,MAAMU,YAAY,GAAG;AACjBY,IAAAA,aAAa,EAAE,YAAUC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADR,GAArB;AAIA,SAAOhC,KAAK,CAACa,WAAW,CAACC,GAAD,EAAM,KAAN,EAAaS,OAAb,EAAsB,IAAtB,EAA4BL,YAA5B,CAAZ,CAAL,CAA4DM,IAA5D,CAAiE,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACN,IAAX;AAAA,GAAvE,EAAwFO,KAAxF,CAA8F,UAAAC,GAAG;AAAA,WAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAF;AAAA,GAAjG,CAAP;AACC,CAPH;;AASA,IAAMlB,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,MAAMK,GAAG,GAAGX,YAAY,CAACM,eAAzB;AACA,MAAMS,YAAY,GAAG;AACnBY,IAAAA,aAAa,EAAE,YAAUC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADN,GAArB;AAGA,SAAOhC,KAAK,CAACa,WAAW,CAACC,GAAD,EAAM,KAAN,EAAa,IAAb,EAAmB,IAAnB,EAAyBI,YAAzB,CAAZ,CAAL,CAAyDM,IAAzD,CAA8D,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACN,IAAX;AAAA,GAApE,EAAqFO,KAArF,CAA2F,UAAAC,GAAG;AAAA,WAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAF;AAAA,GAA9F,CAAP;AACD,CAND,C,CAQA;;;AACA,IAAMM,iBAAiB,GAAG,SAApBA,iBAAoB,CAACV,OAAD,EAAa;AACnC,MAAMT,GAAG,GAAGX,YAAY,CAACO,uBAAzB;AACA,MAAMQ,YAAY,GAAG;AACnBY,IAAAA,aAAa,EAAE,YAAUC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADN,GAArB;AAIA,SAAOhC,KAAK,CAACa,WAAW,CAACC,GAAD,EAAM,MAAN,EAAcS,OAAd,EAAuB,IAAvB,EAA6BL,YAA7B,CAAZ,CAAL,CACNM,IADM,CACD,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACN,IAAX;AAAA,GADL,EAENO,KAFM,CAEA,UAAAC,GAAG;AAAA,WAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAF;AAAA,GAFH,CAAP;AAGH,CATD,C,CAWA;;;AACA,IAAMhB,WAAW,GAAG,SAAdA,WAAc,CAACY,OAAD,EAAa;AAC/B,MAAMT,GAAG,GAAGX,YAAY,CAACQ,WAAzB;AACA,MAAMO,YAAY,GAAG;AACnBY,IAAAA,aAAa,EAAE,WAAUC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADN,GAArB;AAIA,SAAOhC,KAAK,CAACa,WAAW,CAACC,GAAD,EAAK,KAAL,EAAWS,OAAX,EAAmB,IAAnB,EAAwBL,YAAxB,CAAZ,CAAL,CACNM,IADM,CACD,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACN,IAAX;AAAA,GADL,EACsBO,KADtB,CAC4B,UAAAC,GAAG;AAAA,WAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAF;AAAA,GAD/B,CAAP;AAED,CARD;;AAUA,IAAMf,YAAY,GAAG,SAAfA,YAAe,CAACW,OAAD,EAAa;AAChC,MAAMT,GAAG,GAAGX,YAAY,CAACS,YAAzB;AACA,MAAMM,YAAY,GAAG;AACnBY,IAAAA,aAAa,EAAE,WAAUC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADN,GAArB;AAIA,SAAOhC,KAAK,CAACa,WAAW,CAACC,GAAD,EAAK,MAAL,EAAYS,OAAZ,EAAoB,IAApB,EAAyBL,YAAzB,CAAZ,CAAL,CACNM,IADM,CACD,UAAAC,MAAM;AAAA,WAAEA,MAAM,CAACN,IAAT;AAAA,GADL,EACoBO,KADpB,CAC0B,UAAAC,GAAG;AAAA,WAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAF;AAAA,GAD7B,CAAP;AAED,CARD;;AAYF,SAAQL,WAAR,EAAqBd,sBAArB,EAA6CyB,iBAA7C,EAA+DxB,eAA/D,EAAgFE,WAAhF,EAA6FC,YAA7F","sourcesContent":["import axios from 'axios';\nimport querystring from 'querystring'\n\nconst HOSTNAME = 'http://localhost:8080';\n\nconst API_SERVICES = {\n    Login : `${HOSTNAME}/auth/login`,\n    CheckEmail : `${HOSTNAME}/auth/checkemail`,\n    SignUp : `${HOSTNAME}/auth/signup`,\n    ProductIndex : `${HOSTNAME}/product/index`,\n    ProductCategoryGeneral : `${HOSTNAME}/category/general`,\n    ProductCategory : `${HOSTNAME}/category`,\n    CategoryProductLocalAdd: `${HOSTNAME}/category/add`,\n    AuthorIndex: `${HOSTNAME}/author`,\n    AuthorCreate: `${HOSTNAME}/author/add`,\n\n}\n\nconst configFetch = (url, method, body, isJSON = false, extraHeaders = {}) => ({\n    method,\n    url,\n    data: isJSON ? body : querystring.stringify(body),\n    headers: {\n      'Content-Type': isJSON ? 'application/json' : 'application/x-www-form-urlencoded',\n      'Accept': 'application/json',      \n      ...extraHeaders\n    }\n  });\n\n\n  // API PRODUCT\n  const ProductList =(content) => {\n      const url = API_SERVICES.ProductIndex;\n      return axios(configFetch(url, 'get', content)).then(result => result.data).catch(err=>console.log(err))\n  }\n\n  const ProductCategoryGeneral =(content) => {\n    const url = API_SERVICES.ProductCategoryGeneral;\n    const extraHeaders = {\n        Authorization: `Bearer `+localStorage.getItem('token')\n      }\n          \n    return axios(configFetch(url, 'get', content, true, extraHeaders)).then(result => result.data).catch(err=>console.log(err))\n    }\n  \n  const ProductCategory = () => {\n    const url = API_SERVICES.ProductCategory;\n    const extraHeaders = {\n      Authorization: `Bearer `+localStorage.getItem('token')\n    }\n    return axios(configFetch(url, 'get', null, true, extraHeaders)).then(result => result.data).catch(err=>console.log(err))\n  }\n\n  // WRITE NEW PRODUCT LOCAL CATEGORY\n  const NewCategoryAction = (content) => {\n      const url = API_SERVICES.CategoryProductLocalAdd;\n      const extraHeaders = {\n        Authorization: `Bearer `+localStorage.getItem('token')\n      }\n\n      return axios(configFetch(url, 'post', content, true, extraHeaders))\n      .then(result => result.data)\n      .catch(err=>console.log(err))\n  } \n\n  // AUTHOR\n  const AuthorIndex = (content) => {\n    const url = API_SERVICES.AuthorIndex;\n    const extraHeaders = {\n      Authorization: `Bearer` +localStorage.getItem('token')\n    }\n\n    return axios(configFetch(url,'get',content,true,extraHeaders))\n    .then(result => result.data).catch(err=>console.log(err));\n  }\n\n  const AuthorCreate = (content) => {\n    const url = API_SERVICES.AuthorCreate;\n    const extraHeaders = {\n      Authorization: `Bearer` +localStorage.getItem('token')\n    }\n\n    return axios(configFetch(url,'post',content,true,extraHeaders))\n    .then(result=>result.data).catch(err=>console.log(err))\n  }\n\n\n\nexport {ProductList, ProductCategoryGeneral, NewCategoryAction,ProductCategory, AuthorIndex, AuthorCreate}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from 'axios';\nimport querystring from 'querystring';\nvar HOSTNAME = 'http://localhost:8080';\nvar API_SERVICES = {\n  Login: \"\".concat(HOSTNAME, \"/auth/login\"),\n  CheckEmail: \"\".concat(HOSTNAME, \"/auth/checkemail\"),\n  SignUp: \"\".concat(HOSTNAME, \"/auth/signup\"),\n  ProductIndex: \"\".concat(HOSTNAME, \"/product/index\"),\n  ProductCategoryGeneral: \"\".concat(HOSTNAME, \"/product/category-general\")\n};\n\nvar configFetch = function configFetch(url, method, body) {\n  var isJSON = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var extraHeaders = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  return {\n    method: method,\n    url: url,\n    data: isJSON ? body : querystring.stringify(body),\n    headers: _objectSpread({\n      'Content-Type': isJSON ? 'application/json' : 'application/x-www-form-urlencoded',\n      'Accept': 'application/json'\n    }, extraHeaders)\n  };\n}; // API PRODUCT\n\n\nvar ProductList = function ProductList(content) {\n  var url = API_SERVICES.ProductIndex;\n  return axios(configFetch(url, 'get', content)).then(function (result) {\n    return result.data;\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\n\nvar ProductCategoryGeneral = function ProductCategoryGeneral(content) {\n  var url = API_SERVICES.ProductCategoryGeneral;\n  return axios(configFetch(url, 'get', content)).then(function (result) {\n    return result.data;\n  }).catch(function (err) {\n    return console.log(err);\n  });\n};\n\nexport { ProductList, ProductCategoryGeneral };","map":{"version":3,"sources":["/Users/bagus/Documents/GitHub/ADMIN-STORE/src/api/index.js"],"names":["axios","querystring","HOSTNAME","API_SERVICES","Login","CheckEmail","SignUp","ProductIndex","ProductCategoryGeneral","configFetch","url","method","body","isJSON","extraHeaders","data","stringify","headers","ProductList","content","then","result","catch","err","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,IAAMC,QAAQ,GAAG,uBAAjB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,YAAMF,QAAN,gBADY;AAEjBG,EAAAA,UAAU,YAAMH,QAAN,qBAFO;AAGjBI,EAAAA,MAAM,YAAMJ,QAAN,iBAHW;AAIjBK,EAAAA,YAAY,YAAML,QAAN,mBAJK;AAKjBM,EAAAA,sBAAsB,YAAMN,QAAN;AALL,CAArB;;AASA,IAAMO,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAMC,MAAN,EAAcC,IAAd;AAAA,MAAoBC,MAApB,uEAA6B,KAA7B;AAAA,MAAoCC,YAApC,uEAAmD,EAAnD;AAAA,SAA2D;AAC3EH,IAAAA,MAAM,EAANA,MAD2E;AAE3ED,IAAAA,GAAG,EAAHA,GAF2E;AAG3EK,IAAAA,IAAI,EAAEF,MAAM,GAAGD,IAAH,GAAUX,WAAW,CAACe,SAAZ,CAAsBJ,IAAtB,CAHqD;AAI3EK,IAAAA,OAAO;AACL,sBAAgBJ,MAAM,GAAG,kBAAH,GAAwB,mCADzC;AAEL,gBAAU;AAFL,OAGFC,YAHE;AAJoE,GAA3D;AAAA,CAApB,C,CAYE;;;AACA,IAAMI,WAAW,GAAE,SAAbA,WAAa,CAACC,OAAD,EAAa;AAC5B,MAAMT,GAAG,GAAGP,YAAY,CAACI,YAAzB;AACA,SAAOP,KAAK,CAACS,WAAW,CAACC,GAAD,EAAM,KAAN,EAAaS,OAAb,CAAZ,CAAL,CAAwCC,IAAxC,CAA6C,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACN,IAAX;AAAA,GAAnD,EAAoEO,KAApE,CAA0E,UAAAC,GAAG;AAAA,WAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAF;AAAA,GAA7E,CAAP;AACH,CAHD;;AAKA,IAAMf,sBAAsB,GAAE,SAAxBA,sBAAwB,CAACW,OAAD,EAAa;AACzC,MAAMT,GAAG,GAAGP,YAAY,CAACK,sBAAzB;AACA,SAAOR,KAAK,CAACS,WAAW,CAACC,GAAD,EAAM,KAAN,EAAaS,OAAb,CAAZ,CAAL,CAAwCC,IAAxC,CAA6C,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACN,IAAX;AAAA,GAAnD,EAAoEO,KAApE,CAA0E,UAAAC,GAAG;AAAA,WAAEC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAF;AAAA,GAA7E,CAAP;AACH,CAHC;;AAMF,SAAQL,WAAR,EAAqBV,sBAArB","sourcesContent":["import axios from 'axios';\nimport querystring from 'querystring'\n\nconst HOSTNAME = 'http://localhost:8080';\n\nconst API_SERVICES = {\n    Login : `${HOSTNAME}/auth/login`,\n    CheckEmail : `${HOSTNAME}/auth/checkemail`,\n    SignUp : `${HOSTNAME}/auth/signup`,\n    ProductIndex : `${HOSTNAME}/product/index`,\n    ProductCategoryGeneral : `${HOSTNAME}/product/category-general`\n\n}\n\nconst configFetch = (url, method, body, isJSON = false, extraHeaders = {}) => ({\n    method,\n    url,\n    data: isJSON ? body : querystring.stringify(body),\n    headers: {\n      'Content-Type': isJSON ? 'application/json' : 'application/x-www-form-urlencoded',\n      'Accept': 'application/json',\n      ...extraHeaders\n    }\n  });\n\n\n  // API PRODUCT\n  const ProductList =(content) => {\n      const url = API_SERVICES.ProductIndex;\n      return axios(configFetch(url, 'get', content)).then(result => result.data).catch(err=>console.log(err))\n  }\n\n  const ProductCategoryGeneral =(content) => {\n    const url = API_SERVICES.ProductCategoryGeneral;\n    return axios(configFetch(url, 'get', content)).then(result => result.data).catch(err=>console.log(err))\n}\n\n\nexport {ProductList, ProductCategoryGeneral}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/bagus/Documents/GitHub/ADMIN-STORE/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { Provider } from \"react-redux\";\nimport thunk from 'redux-thunk';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./assets/scss/paper-dashboard.scss\";\nimport \"./assets/demo/demo.css\";\nimport indexRoutes from \"./routes/index.jsx\";\nimport Dashboard from \"./layouts/Dashboard/Dashboard.jsx\";\nimport Login from './layouts/Login/Login'; // reducer \n\nimport authReducer from './store/reducer/auth';\nvar hist = createBrowserHistory();\nvar rootReducer = combineReducers({\n  authsd: authReducer\n}); // membuat middleware\n\nvar logger = function logger(store) {\n  return function (next) {\n    return function (action) {\n      var result = next(action);\n      return result;\n    };\n  };\n};\n\nvar composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nvar store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger, thunk)));\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, React.createElement(Router, {\n  history: hist,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"/dashboard\",\n  component: Dashboard,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/\",\n  component: Login,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n})))), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/bagus/Documents/GitHub/ADMIN-STORE/src/index.js"],"names":["React","ReactDOM","createBrowserHistory","Router","Route","Switch","createStore","combineReducers","applyMiddleware","compose","Provider","thunk","indexRoutes","Dashboard","Login","authReducer","hist","rootReducer","authsd","logger","store","next","action","result","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,MAAxB,QAAsC,kBAAtC;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAO,kCAAP;AACA,OAAO,oCAAP;AACA,OAAO,wBAAP;AAEA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,KAAP,MAAkB,uBAAlB,C,CAGA;;AACA,OAAQC,WAAR,MAAyB,sBAAzB;AAEA,IAAMC,IAAI,GAAGd,oBAAoB,EAAjC;AACA,IAAMe,WAAW,GAAGV,eAAe,CAAC;AAClCW,EAAAA,MAAM,EAAEH;AAD0B,CAAD,CAAnC,C,CAIA;;AACA,IAAMI,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AACtB,SAAO,UAAAC,IAAI,EAAI;AACb,WAAO,UAAAC,MAAM,EAAI;AACf,UAAMC,MAAM,GAAGF,IAAI,CAACC,MAAD,CAAnB;AACA,aAAOC,MAAP;AACD,KAHD;AAID,GALD;AAMD,CAPD;;AASA,IAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA8CjB,OAAvE;AAEA,IAAMW,KAAK,GAAGd,WAAW,CAACW,WAAD,EAAcO,gBAAgB,CAAChB,eAAe,CAACW,MAAD,EAASR,KAAT,CAAhB,CAA9B,CAAzB;AAGAV,QAAQ,CAAC0B,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEP,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,MAAD;AAAQ,EAAA,OAAO,EAAEJ,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,YAAZ;AAAyB,EAAA,SAAS,EAAEH,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,GAAZ;AAAgB,EAAA,SAAS,EAAEC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF,CADF,CADF,EAYEc,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAZF","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { Provider } from \"react-redux\";\nimport thunk from 'redux-thunk';\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./assets/scss/paper-dashboard.scss\";\nimport \"./assets/demo/demo.css\";\n\nimport indexRoutes from \"./routes/index.jsx\";\n\nimport Dashboard from \"./layouts/Dashboard/Dashboard.jsx\";\nimport Login from './layouts/Login/Login';\n\n\n// reducer \nimport  authReducer from './store/reducer/auth';\n\nconst hist = createBrowserHistory();\nconst rootReducer = combineReducers({\n  authsd: authReducer\n});\n\n// membuat middleware\nconst logger = store => {\n  return next => {\n    return action => {\n      const result = next(action);\n      return result;\n    }\n  }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__|| compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger, thunk)));\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={hist}>\n      <Switch>\n        <Route path=\"/dashboard\" component={Dashboard}></Route>\n        <Route path=\"/\" component={Login}></Route>\n        {/* {indexRoutes.map((prop, key) => {\n          return <Route path={prop.path} key={key} component={prop.component} />;\n        })} */}\n      </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}
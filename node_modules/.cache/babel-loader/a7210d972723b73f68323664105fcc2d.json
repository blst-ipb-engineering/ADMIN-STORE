{"ast":null,"code":"import _defineProperty from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bagus/Documents/GitHub/ADMIN-STORE/src/layouts/Login/Login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actionCreator from '../../store/action/index';\nimport { Card, CardHeader, CardBody, Input, CardTitle, Row, Col } from \"reactstrap\"; // import kelas from './Login.css';\n// import FormInputs from '../../components/FormInputs/FormInputs';\n\nimport Button from \"../../components/CustomButton/CustomButton.jsx\"; // import classes from '*.module.sass';\n// Auth\n// import * as actions from '../../store/action/index';\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      controls: {\n        email: {\n          value: ''\n        },\n        password: {\n          value: ''\n        }\n      },\n      isSignUp: false\n    };\n\n    _this.submitHandler = function (event) {\n      event.preventDefault(); // console.log(this.state.controls.email.value)\n\n      _this.props.onCheckEmail(_this.state.controls.email.value, _this.state.controls.password.value);\n    };\n\n    _this.inputChangeHandler = function (event, controlName) {\n      var updatedControl = _objectSpread({}, _this.state.controls, _defineProperty({}, controlName, _objectSpread({}, _this.state.controls[controlName], {\n        value: event.target.value\n      })));\n\n      _this.setState({\n        controls: updatedControl\n      });\n    };\n\n    _this.swithchHandler = function () {\n      _this.setState(function (oldState) {\n        return {\n          isSignUp: !oldState.isSignUp\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // let password = null;\n      // if(this.state.isSignUp) {\n      //     password = <Input style={{textAlign:'center'}} type='password' name='password' placeholder='Password'></Input>\n      // }\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          background: 'grey',\n          position: 'absolute',\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Col, {\n        md: 4,\n        style: {\n          margin: 'auto',\n          paddingTop: '100px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-user text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        onClick: this.swithchHandler,\n        tag: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Log In\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.submitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          textAlign: 'center'\n        },\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Enter email\",\n        onChange: function onChange(event) {\n          _this2.inputChangeHandler(event, 'email');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"update ml-auto mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        round: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Sign \", this.state.isSignUp ? 'Up' : 'In'))))))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onCheckEmail: function onCheckEmail(email) {\n      return dispatch(actionCreator.auth(email));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/bagus/Documents/GitHub/ADMIN-STORE/src/layouts/Login/Login.js"],"names":["React","Component","connect","actionCreator","Card","CardHeader","CardBody","Input","CardTitle","Row","Col","Button","Login","state","controls","email","value","password","isSignUp","submitHandler","event","preventDefault","props","onCheckEmail","inputChangeHandler","controlName","updatedControl","target","setState","swithchHandler","oldState","background","position","width","height","margin","paddingTop","textAlign","mapDispatchToProps","dispatch","auth"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actionCreator from '../../store/action/index';\n\nimport { Card, CardHeader, CardBody, Input, CardTitle, Row, Col } from \"reactstrap\";\n// import kelas from './Login.css';\n// import FormInputs from '../../components/FormInputs/FormInputs';\nimport Button from \"../../components/CustomButton/CustomButton.jsx\";\n// import classes from '*.module.sass';\n\n\n// Auth\n// import * as actions from '../../store/action/index';\n\n\nclass Login extends Component {\n\n    state ={\n        controls: {\n            email: {value: ''},\n            password: {value: ''}\n        },\n        isSignUp:false\n    }\n\n    submitHandler = (event) => {                \n        event.preventDefault();\n        // console.log(this.state.controls.email.value)\n        this.props.onCheckEmail(this.state.controls.email.value,this.state.controls.password.value);\n    };\n\n    inputChangeHandler = (event, controlName) => {        \n        const updatedControl = {\n            ...this.state.controls,\n            [controlName]: {\n                ...this.state.controls[controlName],\n                value:event.target.value\n            }\n        }; \n\n        this.setState({controls:updatedControl})\n    }\n\n    swithchHandler= () => {\n        this.setState(oldState =>{\n            return {isSignUp: !oldState.isSignUp}\n        })\n    }\n   \n    render() {\n        // let password = null;\n        // if(this.state.isSignUp) {\n        //     password = <Input style={{textAlign:'center'}} type='password' name='password' placeholder='Password'></Input>\n        // }\n\n        return(\n            <div>\n                <div style={{background:'grey', position:'absolute', width:'100%', height:'100%'}}></div>      \n                    <Col md={4} style={{margin:'auto',paddingTop:'100px'}}>\n                        <Card className=\"card-user text-center\">\n                        <CardHeader>\n                            <CardTitle onClick={this.swithchHandler} tag=\"h4\">Log In</CardTitle>\n                        </CardHeader>\n                        <CardBody>\n                            <form onSubmit={this.submitHandler}>\n                                <Input style={{textAlign:'center'}}\n                                    type=\"email\"\n                                    name=\"email\"                                   \n                                    placeholder=\"Enter email\"\n                                    onChange={(event) => {this.inputChangeHandler(event, 'email')}}\n                                    />  \n                                                                \n                                <Row>\n                                    <div className=\"update ml-auto mr-auto\">\n                                    <Button color=\"primary\" round>Sign {this.state.isSignUp ? 'Up' : 'In'}</Button>\n                                    </div>\n                                </Row>\n                            </form>\n                        </CardBody>                                                \n                        </Card>\n                    </Col>                 \n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onCheckEmail: (email) => dispatch(actionCreator.auth(email))\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}
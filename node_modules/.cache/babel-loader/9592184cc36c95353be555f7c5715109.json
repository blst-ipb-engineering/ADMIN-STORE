{"ast":null,"code":"import * as actionType from '../action/actionTypes';\nimport { updateObject } from '../uitlity';\nvar initialState = {\n  email: null,\n  emailValid: false,\n  password: null,\n  token: null,\n  userId: null,\n  loading: false,\n  error: null,\n  inst: null // is admin\n\n};\n\nvar auth = function auth() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionType.AUTH_START:\n      return updateObject(state, {\n        loading: true,\n        error: null,\n        email: null\n      });\n\n    case actionType.AUTH_LOGOUT:\n      return updateObject(state, {\n        loading: false,\n        error: null,\n        email: null,\n        emailValid: false\n      });\n\n    case actionType.EMAIL_VALID:\n      return updateObject(state, {\n        emailValid: true,\n        loading: false,\n        error: null,\n        email: action.email.data\n      });\n\n    case actionType.EMAIL_INVALID:\n      return updateObject(state, {\n        emailValid: false,\n        loading: false,\n        error: \"E-Mail Account Not Found\",\n        email: null\n      });\n\n    case actionType.PASS_START:\n      return updateObject(state, {\n        loading: true\n      });\n\n    case actionType.PASS_INVALID:\n      return updateObject(state, {\n        emailValid: true,\n        loading: false,\n        error: \"Wrong Password\"\n      });\n\n    case actionType.AUTH_SUCCESS:\n      // console.log(action.authData.data.token);\n      return updateObject(state, {\n        token: action.authData.data.token,\n        userId: action.authData.data.userId,\n        loading: true,\n        inst: action.authData.data.data.userlevel\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default auth;","map":{"version":3,"sources":["/Users/bagus/Documents/GitHub/ADMIN-STORE/src/store/reducer/auth.js"],"names":["actionType","updateObject","initialState","email","emailValid","password","token","userId","loading","error","inst","auth","state","action","type","AUTH_START","AUTH_LOGOUT","EMAIL_VALID","data","EMAIL_INVALID","PASS_START","PASS_INVALID","AUTH_SUCCESS","authData","userlevel"],"mappings":"AAAA,OAAO,KAAKA,UAAZ,MAA4B,uBAA5B;AACA,SAAQC,YAAR,QAA2B,YAA3B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,IADU;AAEjBC,EAAAA,UAAU,EAAE,KAFK;AAGjBC,EAAAA,QAAQ,EAAC,IAHQ;AAIjBC,EAAAA,KAAK,EAAE,IAJU;AAKjBC,EAAAA,MAAM,EAAE,IALS;AAMjBC,EAAAA,OAAO,EAAE,KANQ;AAOjBC,EAAAA,KAAK,EAAE,IAPU;AAQjBC,EAAAA,IAAI,EAAC,IARY,CAQN;;AARM,CAArB;;AAWA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAoC;AAAA,MAAnCC,KAAmC,uEAA3BV,YAA2B;AAAA,MAAbW,MAAa;;AAE7C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAMd,UAAU,CAACe,UAAjB;AACI,aAAOd,YAAY,CAACW,KAAD,EAAQ;AACvBJ,QAAAA,OAAO,EAAC,IADe;AAEvBC,QAAAA,KAAK,EAAC,IAFiB;AAGvBN,QAAAA,KAAK,EAAE;AAHgB,OAAR,CAAnB;;AAMJ,SAAMH,UAAU,CAACgB,WAAjB;AACI,aAAOf,YAAY,CAACW,KAAD,EAAQ;AACvBJ,QAAAA,OAAO,EAAC,KADe;AAEvBC,QAAAA,KAAK,EAAC,IAFiB;AAGvBN,QAAAA,KAAK,EAAE,IAHgB;AAIvBC,QAAAA,UAAU,EAAC;AAJY,OAAR,CAAnB;;AAOJ,SAAMJ,UAAU,CAACiB,WAAjB;AACI,aAAOhB,YAAY,CAAEW,KAAF,EAAS;AACxBR,QAAAA,UAAU,EAAC,IADa;AAExBI,QAAAA,OAAO,EAAC,KAFgB;AAGxBC,QAAAA,KAAK,EAAE,IAHiB;AAIxBN,QAAAA,KAAK,EAACU,MAAM,CAACV,KAAP,CAAae;AAJK,OAAT,CAAnB;;AAOJ,SAAMlB,UAAU,CAACmB,aAAjB;AACI,aAAOlB,YAAY,CAAEW,KAAF,EAAS;AACxBR,QAAAA,UAAU,EAAC,KADa;AAExBI,QAAAA,OAAO,EAAC,KAFgB;AAGxBC,QAAAA,KAAK,EAAE,0BAHiB;AAIxBN,QAAAA,KAAK,EAAE;AAJiB,OAAT,CAAnB;;AAQJ,SAAMH,UAAU,CAACoB,UAAjB;AACI,aAAOnB,YAAY,CAACW,KAAD,EAAQ;AACvBJ,QAAAA,OAAO,EAAC;AADe,OAAR,CAAnB;;AAIJ,SAAMR,UAAU,CAACqB,YAAjB;AACI,aAAOpB,YAAY,CAAEW,KAAF,EAAS;AACxBR,QAAAA,UAAU,EAAC,IADa;AAExBI,QAAAA,OAAO,EAAC,KAFgB;AAGxBC,QAAAA,KAAK,EAAE;AAHiB,OAAT,CAAnB;;AAMJ,SAAMT,UAAU,CAACsB,YAAjB;AACA;AACI,aAAOrB,YAAY,CAAEW,KAAF,EAAS;AACxBN,QAAAA,KAAK,EAACO,MAAM,CAACU,QAAP,CAAgBL,IAAhB,CAAqBZ,KADH;AAExBC,QAAAA,MAAM,EAAEM,MAAM,CAACU,QAAP,CAAgBL,IAAhB,CAAqBX,MAFL;AAGxBC,QAAAA,OAAO,EAAC,IAHgB;AAIxBE,QAAAA,IAAI,EAACG,MAAM,CAACU,QAAP,CAAgBL,IAAhB,CAAqBA,IAArB,CAA0BM;AAJP,OAAT,CAAnB;;AAMJ;AACA,aAAOZ,KAAP;AAtDJ;AAyDH,CA3DD;;AA6DA,eAAeD,IAAf","sourcesContent":["import * as actionType from '../action/actionTypes';\nimport {updateObject} from '../uitlity';\n\nconst initialState = {\n    email: null,\n    emailValid: false,\n    password:null,\n    token: null,\n    userId: null,\n    loading: false,\n    error: null,\n    inst:null, // is admin\n};\n\nconst auth = (state = initialState, action ) =>  {\n    \n    switch(action.type) {\n        case (actionType.AUTH_START):\n            return updateObject(state, {\n                loading:true, \n                error:null, \n                email: null\n            });\n\n        case (actionType.AUTH_LOGOUT):\n            return updateObject(state, {\n                loading:false, \n                error:null, \n                email: null,\n                emailValid:false, \n            });\n            \n        case (actionType.EMAIL_VALID):\n            return updateObject( state, {\n                emailValid:true, \n                loading:false,\n                error: null, \n                email:action.email.data\n            });\n\n        case (actionType.EMAIL_INVALID):\n            return updateObject( state, {\n                emailValid:false, \n                loading:false, \n                error: \"E-Mail Account Not Found\",\n                email: null\n            });\n        \n        \n        case (actionType.PASS_START):\n            return updateObject(state, {\n                loading:true,                 \n            });\n\n        case (actionType.PASS_INVALID):            \n            return updateObject( state, {                            \n                emailValid:true, \n                loading:false, \n                error: \"Wrong Password\",                \n            });\n\n        case (actionType.AUTH_SUCCESS):\n        // console.log(action.authData.data.token);\n            return updateObject( state, {\n                token:action.authData.data.token,\n                userId: action.authData.data.userId,\n                loading:true,\n                inst:action.authData.data.data.userlevel\n            });\n        default:       \n        return state;\n    }\n    \n}\n\nexport default auth; "]},"metadata":{},"sourceType":"module"}
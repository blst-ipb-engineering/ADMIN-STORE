{"ast":null,"code":"import _classCallCheck from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bagus/Documents/GitHub/ADMIN-STORE/src/components/Products/Product.js\";\nimport React, { Component } from 'react';\nimport './Product.css';\nimport { Input, Button, InputGroup, InputGroupAddon, InputGroupText } from \"reactstrap\";\nimport NumberFormat from 'react-number-format';\nimport InputMask from 'react-input-mask';\n\nvar Products =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Products, _Component);\n\n  function Products(props) {\n    var _this;\n\n    _classCallCheck(this, Products);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Products).call(this, props));\n\n    _this.onChangeHandler = function (event) {\n      // validasi input tidak boleh huruf\n      var values = event.target.value.toString().replace(/\\,/g, '');\n      var isNum = /^\\d+$/.test(values);\n      console.log(isNum); // if(value !=== integer) {\n      //     this.setState({errorInput:true});\n      // }else {\n      //     this.setState({errorInput:false});\n      // }\n\n      var price = _this.formatuang(event.target.value);\n\n      _this.setState({\n        price: price\n      });\n    };\n\n    _this.cancelHandler = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        price: _this.formatuang(_this.props.produk.price)\n      });\n    };\n\n    _this.state = {\n      idProduct: _this.props.produk.id,\n      price: _this.formatuang(_this.props.produk.price),\n      errorInput: false\n    };\n    return _this;\n  }\n\n  _createClass(Products, [{\n    key: \"formatuang\",\n    value: function formatuang(amount) {\n      // deletecomma\n      var comadel = amount.toString().replace(/\\,/g, '');\n      var price = comadel.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      ;\n      return price;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      // Validation Error\n      var errorNotif = null;\n\n      if (this.state.errorInput) {\n        errorNotif = React.createElement(\"div\", {\n          className: \"errorInput\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"Input yang anda masukkan salah, masukkan angka mas\");\n      } // Save Button\n\n\n      var savebutton = null;\n\n      if (this.state.price !== this.formatuang(this.props.produk.price)) {\n        savebutton = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          style: {\n            cursor: 'pointer'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"Save\"), \"  \", React.createElement(\"a\", {\n          style: {\n            cursor: 'pointer',\n            fontSize: '9pt'\n          },\n          onClick: this.cancelHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"Cancel\"), \" \");\n      }\n\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"products-display-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"box-media\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"loading-pict\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"box-short-desc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://google.com\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.props.produk.name), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Cetakan ke 2\"), React.createElement(\"div\", {\n        className: \"ellipsis\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Makanan & Minuman - Minuman - Teh\")))), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Rp\")), React.createElement(Input, {\n        onChange: this.onChangeHandler,\n        type: \"text\",\n        name: \"price\",\n        value: this.state.price,\n        id: this.props.produk.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), errorNotif, savebutton)), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Products;\n}(Component);\n\n;\nexport default Products;","map":{"version":3,"sources":["/Users/bagus/Documents/GitHub/ADMIN-STORE/src/components/Products/Product.js"],"names":["React","Component","Input","Button","InputGroup","InputGroupAddon","InputGroupText","NumberFormat","InputMask","Products","props","onChangeHandler","event","values","target","value","toString","replace","isNum","test","console","log","price","formatuang","setState","cancelHandler","preventDefault","produk","state","idProduct","id","errorInput","amount","comadel","errorNotif","savebutton","cursor","fontSize","name","onSubmitHandler"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './Product.css';\nimport { Input,Button, InputGroup, InputGroupAddon, InputGroupText } from \"reactstrap\";\nimport NumberFormat from 'react-number-format';\nimport InputMask from 'react-input-mask';\n\nclass Products extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            idProduct: this.props.produk.id,\n            price: this.formatuang(this.props.produk.price),\n            errorInput: false\n        }\n    }\n\n    formatuang(amount) {\n        // deletecomma\n        let comadel = amount.toString().replace(/\\,/g,'');        \n        let price = comadel.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");;\n\t\treturn price;\n    }\n    \n    onChangeHandler= (event) => { \n        // validasi input tidak boleh huruf\n        let values = event.target.value.toString().replace(/\\,/g,'');\n        let isNum = /^\\d+$/.test(values);\n        console.log(isNum);\n        // if(value !=== integer) {\n        //     this.setState({errorInput:true});\n        // }else {\n        //     this.setState({errorInput:false});\n        // }\n\n        let price = this.formatuang(event.target.value);    \n        this.setState({price:price})        \n    }\n\n    componentDidMount() {\n        \n    }\n\n    cancelHandler = (event) => {\n        event.preventDefault();\n        this.setState({\n            price:this.formatuang(this.props.produk.price)\n        })\n    }\n\n\n    render() {\n\n        // Validation Error\n        let errorNotif = null;\n        if(this.state.errorInput){\n            errorNotif = <div className=\"errorInput\">Input yang anda masukkan salah, masukkan angka mas</div>\n        }\n\n        // Save Button\n        let savebutton = null; \n        if(this.state.price !== this.formatuang(this.props.produk.price)){\n            savebutton = <div ><button style={{cursor:'pointer'}}>Save</button>  <a style={{cursor:'pointer', fontSize:'9pt'}} onClick={this.cancelHandler}>Cancel</a> </div> ;\n        }\n\n        return (\n            <tr>\n        {/* Check */}\n        <td>\n\n        </td>\n        {/* Product */}\n        <td>\n            <div className=\"products-display-container\">\n                <div className=\"box-media\">\n                    <div className=\"loading-pict\"></div>\n                    {/* <img className=\"img-frame\" src=\"https://www.most.co.id/tradingv2/Image/ShowImage/40?useDefault=False\" alt={this.props.produk.name}></img> */}\n                </div>\n                <div className=\"box-short-desc\">\n                    <a href=\"http://google.com\" target=\"_blank\">{this.props.produk.name}</a>\n                    <small>Cetakan ke 2</small>\n                    <div className=\"ellipsis\">Makanan & Minuman - Minuman - Teh</div> \n                </div>                \n            </div>\n        </td>   \n        {/* Price    */}\n        <td>\n            <form onSubmit={this.onSubmitHandler}>\n                <InputGroup>\n                    <InputGroupAddon addonType=\"prepend\">\n                        <InputGroupText>Rp</InputGroupText>\n                    </InputGroupAddon>\n                    {/* <InputMask value={this.props.produk.price} mask=\"999,999\"></InputMask> */}\n                    <Input\n                    onChange = {this.onChangeHandler}\n                    type=\"text\"                    \n                    name=\"price\"    \n                    value={this.state.price}                \n                    id ={this.props.produk.id}\n                    ></Input>\n                </InputGroup>   \n                {errorNotif}\n                {savebutton}               \n            </form>\n        </td>\n        {/* Stock */}\n        <td>\n\n        </td>\n        {/* Edit Publish */}\n        <td>\n\n        </td>\n    </tr>\n        )\n    }\n    \n};\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}
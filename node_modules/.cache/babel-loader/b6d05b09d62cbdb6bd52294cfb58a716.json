{"ast":null,"code":"import _objectSpread from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bagus/Documents/GitHub/ADMIN-STORE/src/components/Products/ImageUploader/ImageUploader.jsx\";\nimport React, { Component } from 'react';\nimport './ImageUpload.css';\nimport Dropzone from 'react-dropzone';\nimport ReactTooltip from 'react-tooltip';\nvar baseStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  width: '100%',\n  height: '250px',\n  borderWidth: 2,\n  borderColor: '#bbb',\n  borderStyle: 'dashed',\n  padding: '20px',\n  cursor: 'pointer'\n};\nvar activeStyle = {\n  borderStyle: 'solid',\n  borderColor: '#6c6',\n  backgroundColor: '#eee'\n};\nvar rejectStyle = {\n  borderStyle: 'solid',\n  borderColor: '#c66',\n  backgroundColor: '#eee'\n};\nvar previewThumbnail = {\n  padding: '10px',\n  width: '100%',\n  height: '250px',\n  display: 'flex',\n  alignItems: 'center',\n  border: '1px #e2e2e2 solid',\n  borderRadius: '5px',\n  margin: '20px 0px',\n  position: 'relative',\n  overflow: 'hidden'\n};\n\nvar ImageUploader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ImageUploader, _Component);\n\n  function ImageUploader() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ImageUploader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ImageUploader)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleUploadImage = function () {\n      var cloudName = 'blst';\n      var unsignedUploadPreset = 'product';\n      var HOST = \"https://api.cloudinary.com/v1_1/\".concat(cloudName, \"/image/upload\");\n      var fd = new FormData();\n      fd.append('upload_preset', unsignedUploadPreset);\n      fd.append('tags', 'browser_upload'); // Optional - add tag for image admin in Cloudinary\n\n      fd.append('file', _this.props.filepreview);\n      fetch(HOST, {\n        body: fd,\n        method: 'POST'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (result) {\n        _this.setState({\n          imageURL: result.secure_url,\n          isLoadingUploadKTP: false\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ImageUploader, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var preview = this.props.filepreview.map(function (file, index) {\n        return React.createElement(\"div\", {\n          style: previewThumbnail,\n          key: file.index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(ReactTooltip, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"delete-icon\",\n          \"data-tip\": \"Hapus\",\n          onClick: function onClick(event) {\n            return _this2.props.deleted(event, index);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"nc-icon nc-simple-remove\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"thumbnail-inner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          alt: file.name,\n          src: file.preview,\n          className: \"img\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        })));\n      });\n      var uploader = null;\n\n      if (this.props.filepreview.length < this.props.maxUpload) {\n        uploader = React.createElement(Dropzone, {\n          accept: \"image/*\",\n          onDrop: this.props.onDrop,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, function (_ref) {\n          var getRootProps = _ref.getRootProps,\n              getInputProps = _ref.getInputProps,\n              isDragReject = _ref.isDragReject,\n              isDragActive = _ref.isDragActive;\n\n          var styles = _objectSpread({}, baseStyle);\n\n          styles = isDragActive ? _objectSpread({}, styles, activeStyle) : styles;\n          styles = isDragReject ? _objectSpread({}, styles, rejectStyle) : styles;\n          return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n            style: styles,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          })), React.createElement(\"img\", {\n            src: \"https://www.bukalapak.com/images/jual_barang/upload-image-v4.png\",\n            width: \"150px\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }), React.createElement(\"p\", {\n            className: \"text-desc\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, React.createElement(\"i\", {\n            className: \"nc-icon nc-simple-add\",\n            style: {\n              marginRight: '5px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }), \"Pilih Gambar Barang\")));\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"thumbnail-image\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, preview), uploader);\n    }\n  }]);\n\n  return ImageUploader;\n}(Component);\n\nexport default ImageUploader;","map":{"version":3,"sources":["/Users/bagus/Documents/GitHub/ADMIN-STORE/src/components/Products/ImageUploader/ImageUploader.jsx"],"names":["React","Component","Dropzone","ReactTooltip","baseStyle","display","flexDirection","alignItems","justifyContent","width","height","borderWidth","borderColor","borderStyle","padding","cursor","activeStyle","backgroundColor","rejectStyle","previewThumbnail","border","borderRadius","margin","position","overflow","ImageUploader","handleUploadImage","cloudName","unsignedUploadPreset","HOST","fd","FormData","append","props","filepreview","fetch","body","method","then","response","json","result","setState","imageURL","secure_url","isLoadingUploadKTP","preview","map","file","index","event","deleted","name","uploader","length","maxUpload","onDrop","getRootProps","getInputProps","isDragReject","isDragActive","styles","marginRight"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './ImageUpload.css';\nimport Dropzone from 'react-dropzone';\nimport ReactTooltip from 'react-tooltip'\n\n\nconst baseStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent:'center',\n    width: '100%',\n    height: '250px',\n    borderWidth: 2,\n    borderColor: '#bbb',\n    borderStyle: 'dashed',\n    padding: '20px',\n    cursor: 'pointer'\n  };\n  const activeStyle = {\n    borderStyle: 'solid',\n    borderColor: '#6c6',\n    backgroundColor: '#eee'\n  };\n  const rejectStyle = {\n    borderStyle: 'solid',\n    borderColor: '#c66',\n    backgroundColor: '#eee'\n  };\n\n  const previewThumbnail = {\n    padding: '10px',\n    width: '100%',\n    height: '250px',\n    display: 'flex',\n    alignItems: 'center',\n    border: '1px #e2e2e2 solid',\n    borderRadius: '5px',\n    margin : '20px 0px',\n    position:'relative',\n    overflow:'hidden'\n  }\n\nclass ImageUploader extends Component {\n    \n    handleUploadImage = () => {        \n        const cloudName = 'blst';\n        const unsignedUploadPreset = 'product';\n        const HOST = `https://api.cloudinary.com/v1_1/${cloudName}/image/upload`;\n        let fd = new FormData()\n\n        fd.append('upload_preset', unsignedUploadPreset);\n        fd.append('tags', 'browser_upload'); // Optional - add tag for image admin in Cloudinary\n        fd.append('file', this.props.filepreview);\n\n\n        fetch(HOST,{\n        body: fd,\n        method: 'POST'\n        }).then((response) => {\n        return response.json()\n        }).then((result) => {\n        this.setState({ imageURL: result.secure_url, isLoadingUploadKTP: false })\n        })\n    }\n    \n    \n    render() {     \n        \n        const preview = this.props.filepreview.map((file, index)=> (                                  \n            <div style={previewThumbnail} key={file.index}>\n                <ReactTooltip />\n                <div className=\"delete-icon\" data-tip=\"Hapus\" onClick={(event) => this.props.deleted(event,index)}><i className=\"nc-icon nc-simple-remove\"></i></div>\n                <div className=\"thumbnail-inner\">\n                    <img alt={file.name}\n                        src={file.preview}\n                        className=\"img\"\n                    />\n                </div>\n            </div>\n        ));\n            \n\n        let uploader = null;\n        if (this.props.filepreview.length < this.props.maxUpload){\n            uploader = \n            <Dropzone accept=\"image/*\" onDrop={this.props.onDrop}>\n                {({getRootProps, getInputProps,isDragReject, isDragActive}) => {\n                                let styles = {...baseStyle}\n                                styles = isDragActive ? {...styles, ...activeStyle} : styles\n                                styles = isDragReject ? {...styles, ...rejectStyle} : styles\n\n                                return (\n                                    <div {...getRootProps()} style={styles}>\n                                        <input {...getInputProps()} />\n                                        <img src=\"https://www.bukalapak.com/images/jual_barang/upload-image-v4.png\" width=\"150px\" ></img>\n                                        <p className=\"text-desc\">\n                                            <span>\n                                                <i className=\"nc-icon nc-simple-add\" style={{marginRight:'5px'}}></i>\n                                                Pilih Gambar Barang\n                                            </span>\n                                        </p>\n                                    </div>\n                                )\n                            }}\n            </Dropzone>;\n        }\n\n\n        return(            \n            <div>\n            <div className=\"thumbnail-image\">\n                {preview}\n            </div>\n                {uploader}\n            </div>\n            \n        );\n    }\n}\n\nexport default ImageUploader;"]},"metadata":{},"sourceType":"module"}
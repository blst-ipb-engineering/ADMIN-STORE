{"ast":null,"code":"import _defineProperty from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bagus/Documents/GitHub/ADMIN-STORE/src/layouts/Login/Login.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actionCreator from '../../store/action/index';\nimport { Card, CardHeader, CardBody, Input, CardTitle, Row, Col } from \"reactstrap\"; // import kelas from './Login.css';\n// import FormInputs from '../../components/FormInputs/FormInputs';\n\nimport Button from \"../../components/CustomButton/CustomButton.jsx\"; // import classes from '*.module.sass';\n// Auth\n// import * as actions from '../../store/action/index';\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      controls: {\n        email: {\n          value: ''\n        },\n        password: {\n          value: ''\n        }\n      },\n      isSignUp: false,\n      emailValid: false\n    };\n\n    _this.submitHandler = function (event) {\n      event.preventDefault(); //triger action untuk check email\n\n      _this.props.onCheckEmail(_this.state.controls.email.value, _this.state.controls.password.value);\n    };\n\n    _this.inputChangeHandler = function (event, controlName) {\n      var updatedControl = _objectSpread({}, _this.state.controls, _defineProperty({}, controlName, _objectSpread({}, _this.state.controls[controlName], {\n        value: event.target.value\n      })));\n\n      _this.setState({\n        controls: updatedControl\n      });\n    };\n\n    _this.swithchHandler = function () {\n      _this.setState(function (oldState) {\n        return {\n          isSignUp: !oldState.isSignUp\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var password = null;\n\n      if (this.props.emailVal) {\n        password = React.createElement(Input, {\n          style: {\n            textAlign: 'center'\n          },\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        });\n      }\n\n      var notifError = null;\n\n      if (this.props.error !== null) {\n        notifError = React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"Error Gan Email Kaga ada\");\n      }\n\n      var loading = React.createElement(CardTitle, {\n        tag: \"h4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Log In\");\n\n      if (this.props.loading) {\n        loading = React.createElement(CardTitle, {\n          tag: \"h4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"Please Wait\");\n      }\n\n      var form = null;\n\n      if (this.props.email == null) {\n        form = React.createElement(Input, {\n          style: {\n            textAlign: 'center',\n            padding: '20px'\n          },\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Enter email\",\n          onChange: function onChange(event) {\n            _this2.inputChangeHandler(event, 'email');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          background: 'grey',\n          position: 'absolute',\n          width: '100%',\n          height: '100%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(Col, {\n        md: 4,\n        style: {\n          margin: 'auto',\n          paddingTop: '100px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-user text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, loading), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.submitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, password, notifError, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"update ml-auto mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        round: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Sign \", this.state.isSignUp ? 'Up' : 'In'))))))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log(state.authsd);\n  return {\n    emailVal: state.authsd.emailValid,\n    error: state.authsd.error,\n    loading: state.authsd.loading,\n    email: state.authsd.email\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onCheckEmail: function onCheckEmail(email) {\n      return dispatch(actionCreator.auth(email));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/bagus/Documents/GitHub/ADMIN-STORE/src/layouts/Login/Login.js"],"names":["React","Component","connect","actionCreator","Card","CardHeader","CardBody","Input","CardTitle","Row","Col","Button","Login","state","controls","email","value","password","isSignUp","emailValid","submitHandler","event","preventDefault","props","onCheckEmail","inputChangeHandler","controlName","updatedControl","target","setState","swithchHandler","oldState","emailVal","textAlign","notifError","error","loading","form","padding","background","position","width","height","margin","paddingTop","mapStateToProps","console","log","authsd","mapDispatchToProps","dispatch","auth"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport * as actionCreator from '../../store/action/index';\n\nimport { Card, CardHeader, CardBody, Input, CardTitle, Row, Col } from \"reactstrap\";\n// import kelas from './Login.css';\n// import FormInputs from '../../components/FormInputs/FormInputs';\nimport Button from \"../../components/CustomButton/CustomButton.jsx\";\n// import classes from '*.module.sass';\n\n\n// Auth\n// import * as actions from '../../store/action/index';\n\n\nclass Login extends Component {\n\n    state ={\n        controls: {\n            email: {value: ''},\n            password: {value: ''}\n        },\n        isSignUp:false,\n        emailValid:false,\n    }\n\n    submitHandler = (event) => {                \n        event.preventDefault();\n        //triger action untuk check email\n        this.props.onCheckEmail(this.state.controls.email.value,this.state.controls.password.value);\n    };\n\n    inputChangeHandler = (event, controlName) => {        \n        const updatedControl = {\n            ...this.state.controls,\n            [controlName]: {\n                ...this.state.controls[controlName],\n                value:event.target.value\n            }\n        }; \n\n        this.setState({controls:updatedControl})\n    }\n\n    swithchHandler= () => {\n        this.setState(oldState =>{\n            return {isSignUp: !oldState.isSignUp}\n        })\n    }\n   \n    render() {\n        let password = null;\n        if(this.props.emailVal) {\n            password = <Input style={{textAlign:'center'}} type='password' name='password' placeholder='Password'></Input>\n        }\n\n        let notifError = null;\n        if(this.props.error !== null){\n            notifError = <h5>Error Gan Email Kaga ada</h5>\n        }\n\n        let loading = <CardTitle tag=\"h4\">Log In</CardTitle>;\n        if(this.props.loading){\n            loading = <CardTitle tag=\"h4\">Please Wait</CardTitle>\n        }\n\n        let form = null;\n\n        if(this.props.email == null){\n            form = <Input style={{textAlign:'center',padding:'20px'}}\n            type=\"email\"\n            name=\"email\"                                   \n            placeholder=\"Enter email\"\n            onChange={(event) => {this.inputChangeHandler(event, 'email')}}\n            />  \n        }\n\n        return(\n            <div>\n                <div style={{background:'grey', position:'absolute', width:'100%', height:'100%'}}></div>      \n                    <Col md={4} style={{margin:'auto',paddingTop:'100px'}}>\n                        <Card className=\"card-user text-center\">\n                        <CardHeader>\n                            {loading}\n                        </CardHeader>\n                        <CardBody>\n                            <form onSubmit={this.submitHandler}>                                \n                                {password}\n                                {notifError}                     \n                                <Row>\n                                    <div className=\"update ml-auto mr-auto\">\n                                    <Button color=\"primary\" round>Sign {this.state.isSignUp ? 'Up' : 'In'}</Button>\n                                    </div>\n                                </Row>\n                            </form>\n                        </CardBody>                                                \n                        </Card>\n                    </Col>                 \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    console.log(state.authsd)\n    return {\n        emailVal : state.authsd.emailValid,\n        error : state.authsd.error,\n        loading : state.authsd.loading,\n        email: state.authsd.email\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onCheckEmail: (email) => dispatch(actionCreator.auth(email))\n    }\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}
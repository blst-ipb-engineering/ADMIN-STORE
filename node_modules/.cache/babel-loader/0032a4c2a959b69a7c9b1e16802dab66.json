{"ast":null,"code":"import _objectSpread from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bagus/Documents/GitHub/ADMIN-STORE/src/views/Input/ProductEditor.jsx\";\nimport React, { Component } from 'react';\nimport { Card, Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, CardFooter, InputGroup, InputGroupAddon, InputGroupText, CardHeader, CardBody, Row, Col } from \"reactstrap\";\nimport ImageUploader from '../../components/Products/ImageUploader/ImageUploader.jsx';\nimport { Label } from '../../components/UI/Form/Label/Label';\nimport Select from 'react-select';\nimport { Prompt } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport * as actionCreator from '../../store/action/index';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Loader from '../../components/Loader/Loader';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { ProductList as ProductListAction, ProductCategory, ProductAdd, ProductEdit, ProductCategoryGeneral, NewCategoryAction, AuthorIndex, AuthorCreate, MaterialIndex, MaterialCreate } from '../../api/index';\n\nvar ProductEditor =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProductEditor, _Component);\n\n  function ProductEditor(props) {\n    var _this;\n\n    _classCallCheck(this, ProductEditor);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProductEditor).call(this, props));\n\n    _this.onChangeMoneyHandler = function (event) {\n      // validasi input tidak boleh huruf\n      var values = event.target.value.toString().replace(/\\,/g, '');\n      var isNum = /^\\d+$/.test(values);\n      var key = event.target.name;\n\n      if (isNum || event.target.value === null) {\n        _this.setState(_defineProperty({}, key, parseInt(values)));\n      } else if (values.length <= 1) {\n        _this.setState(_defineProperty({}, key, 0));\n      }\n\n      _this.countFilled();\n    };\n\n    _this.newFormHandler = function (event) {\n      var _this$setState3;\n\n      event.preventDefault();\n      var name = event.target.name;\n\n      _this.setState({\n        addAuthor: false,\n        addMaterial: false,\n        addCategory: false\n      });\n\n      _this.setState((_this$setState3 = {}, _defineProperty(_this$setState3, name, true), _defineProperty(_this$setState3, \"modal\", true), _this$setState3));\n    };\n\n    _this.hideModal = function () {\n      _this.setState({\n        modal: !_this.state.modal\n      });\n    };\n\n    _this.onSaveHandler = function (event) {\n      _this.setState({\n        prompt: false\n      }, function () {\n        event.preventDefault();\n        var content = _this.state;\n        ProductAdd(content).then(function (res) {\n          if (res.status === \"success\") {\n            var toaster = {\n              isOpenToast: true,\n              toastMessage: res.data.name + \" Succesfully Added\",\n              toastType: 'success'\n            };\n            toast.success(res.data.name + \" Successfully Added\"); // this.props.history.replace('/dashboard/products');\n            // this.props.history.push('/dashboard/products');\n            // this.props.toggleToaster(toaster)\n          }\n        }).catch(function (err) {\n          toast.warn(\"Whoops Something Error\" + err);\n        });\n      });\n    };\n\n    _this.onDrop = function (acceptedFiles, rejectedFiles) {\n      console.log(acceptedFiles); // this.setState({saveable:false})\n      // const max_file_count = 4 - this.state.thumbnailFile.length;\n      // const array_images = this.state.thumbnailFile.concat(\n      //     files.slice(0, max_file_count).map((file) => \n      //         // if(file.size < 2000000){\n      //             Object.assign(file, {   \n      //                 preview: URL.createObjectURL(file)\n      //             })\n      //         // }else{\n      //         //     toast.warning(\"Please Upload File max size file <2 MB\")\n      //         // }\n      //     ));      \n      // this.setState({thumbnailFile: array_images});        \n      // // uploading to cloudinary directly\n      // files.slice(0, max_file_count).map((file)=> {            \n      //     this.handleUploadImages(file).then(()=> {\n      //         this.setState({saveable:true})\n      //         this.countFilled();  \n      //     })  ;            \n      // })\n    };\n\n    _this.handleUploadImages = function (image) {\n      console.log(image); // uploads is an array that would hold all the post methods for each image to be uploaded, then we'd use axios.all()\n      // our formdata\n\n      var formData = new FormData();\n      formData.append(\"file\", image);\n      formData.append(\"tags\", ['product', 'halo']); // Add tags for the images - {Array}\n\n      formData.append(\"upload_preset\", \"blst_product\"); // Replace the preset name with your own\n\n      formData.append(\"api_key\", \"387685966233372\"); // Replace API key with your own Cloudinary API key\n\n      formData.append(\"folder\", \"product\");\n      formData.append(\"quality\", \"low\");\n      formData.append(\"timestamp\", Date.now() / 1000 | 0);\n      console.log(formData); // Replace cloudinary upload URL with yours\n\n      return axios.post(\"https://api.cloudinary.com/v1_1/blst/image/upload\", formData, {\n        headers: {\n          \"X-Requested-With\": \"XMLHttpRequest\"\n        }\n      }).then(function (response) {\n        console.log(response.data); // const oldImages = this.state.productImagesUrl;\n\n        var newImages = response.data;\n\n        var newArrayofImages = _this.state.productImagesUrl.concat(newImages);\n\n        _this.setState({\n          productImagesUrl: newArrayofImages\n        });\n      });\n    };\n\n    _this.countFilled = function () {\n      var title = _this.state.name !== '' ? 1 : 0;\n      var category = _this.state.category.length !== 0 ? 1 : 0;\n      var author = _this.state.author.length !== 0 ? 1 : 0;\n      var productImagesUrl = _this.state.productImagesUrl.length !== 0 ? 1 : 0;\n      var material = _this.state.category.material !== 0 ? 1 : 0;\n      var categoryGeneral = _this.state.categoryGeneral.length !== 0 ? 1 : 0;\n      var description = _this.state.description !== '' ? 1 : 0;\n      var base_price = _this.state.base_price !== 0 ? 1 : 0;\n      var weight = _this.state.weight !== 0 ? 1 : 0;\n      var pages = _this.state.pages !== 0 ? 1 : 0;\n      var height = _this.state.weight !== 0 ? 1 : 0;\n      var thick = _this.state.weight !== 0 ? 1 : 0;\n      var isbn = _this.state.isbn !== '' ? 1 : 0;\n      var sum = [title, category, author, productImagesUrl, material, categoryGeneral, description, base_price, weight, pages, height, thick, isbn];\n      var sums = sum.reduce(function (a, b) {\n        return a + b;\n      }, 0);\n      var pembagi = sum.length;\n      var percent = sums / pembagi * 100;\n\n      _this.setState({\n        sumFilled: Math.ceil(percent)\n      });\n    };\n\n    _this.deleteImageHandler = function (event, index) {\n      event.preventDefault();\n      var public_id = _this.state.productImagesUrl[index];\n\n      if (typeof public_id !== 'undefined') {\n        axios.delete(\"https://api.cloudinary.com/v1_1/blst/image/upload?public_ids[]=\" + public_id.public_id).then(function (res) {\n          console.log(res);\n        });\n      }\n\n      _this.state.thumbnailFile.splice(index, 1);\n\n      _this.setState({\n        thumbnailFile: _this.state.thumbnailFile\n      });\n    };\n\n    _this.AddButtonHandler = function (event) {\n      event.preventDefault();\n      var mode = _this.state.addMode;\n\n      if (mode === 'category') {\n        var content = {\n          name: _this.state.newCategory.name\n        };\n        NewCategoryAction(content).then(function (res) {\n          if (res.status === \"success\") {\n            toast.success(\"Material Added Successfully\");\n\n            _this.hideModal();\n\n            var addedCategory = {\n              id: res.data.id,\n              value: res.data.id,\n              label: res.data.name\n            };\n            var oldCategory = _this.state.category;\n            var newCategory = oldCategory.concat(addedCategory);\n\n            _this.setState({\n              category: newCategory\n            });\n          } else {\n            toast.warning(\"Error Please Reload\");\n          }\n        }).then(function (res) {\n          var category = [];\n          ProductCategory().then(function (res) {\n            res.map(function (value, key) {\n              category.push({\n                id: value.id,\n                value: value.id,\n                label: value.name\n              });\n            });\n\n            _this.setState({\n              category_options: category\n            });\n          });\n        });\n      }\n\n      if (mode === 'author') {\n        var _content = {\n          name: _this.state.newAuthor.name,\n          occupation: _this.state.newAuthor.occupation,\n          phone: _this.state.newAuthor.phone\n        };\n        console.log(_content);\n        AuthorCreate(_content).then(function (res) {\n          if (res.status === \"success\") {\n            toast.success(\"Author Added Successfully\");\n\n            _this.hideModal();\n\n            var addedAuthor = {\n              id: res.data.id,\n              value: res.data.id,\n              label: res.data.name\n            };\n            var oldAuthor = _this.state.author;\n            var newAuthor = oldAuthor.concat(addedAuthor);\n\n            _this.setState({\n              author: newAuthor\n            });\n          } else {\n            toast.warning(\"Error Please Reload\");\n          }\n        }).then(function (res) {\n          var authors = [];\n          AuthorIndex().then(function (res) {\n            res.map(function (value, key) {\n              authors.push({\n                id: value.id,\n                value: value.id,\n                label: value.name\n              });\n            });\n            console.log(authors);\n\n            _this.setState({\n              authors_options: authors\n            });\n          });\n        });\n      }\n\n      if (mode === 'material') {\n        var _content2 = {\n          name: _this.state.newMaterial.name\n        };\n        MaterialCreate(_content2).then(function (res) {\n          console.log(res);\n\n          if (res.status === \"success\") {\n            toast.success(\"Material Added Successfully\");\n\n            _this.hideModal();\n\n            var addedMaterial = {\n              id: res.data.id,\n              value: res.data.id,\n              label: res.data.name\n            };\n            var oldMaterial = _this.state.material;\n            var newMaterial = oldMaterial.concat(addedMaterial);\n\n            _this.setState({\n              material: newMaterial\n            });\n          } else {\n            toast.warning(\"Error Please Reload\");\n          }\n        }).then(function (res) {\n          var materials = [];\n          MaterialIndex().then(function (res) {\n            res.map(function (value, key) {\n              materials.push({\n                id: value.id,\n                value: value.id,\n                label: value.name\n              });\n            });\n\n            _this.setState({\n              materials: materials\n            });\n          });\n        });\n      }\n    };\n\n    _this.showToaster = function (message) {\n      var snackBarOption = {\n        isOpen: true,\n        text: message\n      };\n    };\n\n    _this.state = {\n      name: '',\n      categoryGeneral: {\n        id: 4,\n        label: \"Book\",\n        value: 4\n      },\n      category: [// { id: 1, value: 'Pertanian', label: 'Pertanian' },\n        // { id: 2, value: 'Peternakan', label: 'Peternakan' },\n        // { id: 3,value: 'Teknologi', label: 'Teknologi' }\n      ],\n      description: '',\n      create_price: 0,\n      published_price: 0,\n      base_price: 0,\n      publish_date: new Date(),\n      weight: 0,\n      isbn: '',\n      status: 'draft',\n      height: 0,\n      width: 0,\n      thick: 0,\n      stock_level: 0,\n      version: 1,\n      production_version: 1,\n      sku: '',\n      format: null,\n      pict_1: null,\n      pict_2: null,\n      pict_3: null,\n      pict_4: null,\n      pict_5: null,\n      video_1: null,\n      video_2: null,\n      video_3: null,\n      video_4: null,\n      video_5: null,\n      material: [],\n      percent_royalti: null,\n      author: [],\n      pages: 0,\n      category_general_options: [],\n      category_options: [// { id: 1, value: 'Pertanian', label: 'Pertanian' },\n        // { id: 2, value: 'Peternakan', label: 'Peternakan' },\n        // { id: 3,value: 'Teknologi', label: 'Teknologi' }\n      ],\n      materials: [// {id:1, value: 'Book Paper', label:'Book Paper'},\n        // {id:2, value: 'Soft Cover', label:'Soft Cover'},\n        // {id:3, value: 'Art Carton', label:'Art Carton'},\n      ],\n      authors_options: [// {id:1, value: 'Author 1', label:'Author 1'},\n        // {id:2, value: 'Author 2', label:'Author 2'},\n        // {id:3, value: 'Author 3', label:'Author 3'},\n      ],\n      addCategory: false,\n      addAuthor: false,\n      addMaterial: false,\n      saveable: true,\n      addMode: null,\n      modal: false,\n      newCategory: {\n        name: ''\n      },\n      newAuthor: {\n        name: '',\n        occupation: '',\n        phone: ''\n      },\n      newMaterial: {\n        name: ''\n      },\n      thumbnailFile: [],\n      productImagesUrl: [],\n      sumFilled: 0,\n      prompt: true\n    };\n    return _this;\n  }\n\n  _createClass(ProductEditor, [{\n    key: \"formatuang\",\n    value: function formatuang(amount) {\n      if (amount === null) {\n        amount = 0;\n      } // deletecomma\n\n\n      var comadel = amount.toString().replace(/\\,/g, '');\n      var price = comadel.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      ;\n      return price;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      console.log(\"[Will Unmount]\"); // Make sure to revoke the data uris to avoid memory leaks\n\n      this.state.thumbnailFile.forEach(function (file) {\n        return URL.revokeObjectURL(file.preview);\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      console.log(\"[WILL MOUNT]\");\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"[DIDMOUNT]\"); // call for CategoryGeneral\n\n      this.props.setLoading(true);\n      var categoryGeneral = [];\n      var content = {};\n      ProductCategoryGeneral(content).then(function (res) {\n        res.map(function (value, key) {\n          categoryGeneral.push({\n            id: value.id,\n            value: value.id,\n            label: value.name\n          });\n        });\n      }).then(function (res) {\n        _this2.setState({\n          category_general_options: categoryGeneral\n        });\n\n        _this2.props.setLoading(false);\n      }).catch(function (err) {\n        return toast.warn(\"Network Error, Can't get catogory data from server \" + err);\n      });\n      this.props.setLoading(false); // call for Category\n\n      var category = [];\n      ProductCategory().then(function (res) {\n        res.map(function (value, key) {\n          category.push({\n            id: value.id,\n            value: value.name,\n            label: value.name\n          });\n        });\n\n        _this2.setState({\n          category_options: category\n        });\n      }); // call for Material\n\n      var materials = [];\n      MaterialIndex().then(function (res) {\n        res.map(function (value, key) {\n          materials.push({\n            id: value.id,\n            value: value.id,\n            label: value.name\n          });\n        });\n\n        _this2.setState({\n          materials: materials\n        });\n      }); // call for author\n\n      var authorsnya = [];\n      AuthorIndex().then(function (res) {\n        res.map(function (value, key) {\n          authorsnya.push({\n            id: value.id,\n            value: value.name,\n            label: value.name\n          });\n        });\n\n        _this2.setState({\n          authors_options: authorsnya\n        });\n      }); // if status == edit\n\n      if (this.props.match.params.status === \"edit\") {\n        var _content3 = {\n          id: this.props.match.params.id\n        };\n        ProductEdit(_content3).then(function (res) {\n          console.log(res);\n        });\n      }\n    } // Handling untuk penambahan category, material, author\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(\"[RENDER]\");\n      var modalform = null;\n      var titlemodal = null;\n      var status = false;\n\n      if (this.state.addCategory) {\n        titlemodal = \"Add Category\";\n        status = this.state.newCategory.name === \"\";\n        modalform = React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 508\n          },\n          __self: this\n        }, React.createElement(Col, {\n          md: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 509\n          },\n          __self: this\n        }, React.createElement(Label, {\n          for: \"nasme\",\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 510\n          },\n          __self: this\n        }, \"Category Name \", React.createElement(\"small\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 510\n          },\n          __self: this\n        }, \"/ Nama Kategori\")), React.createElement(Input, {\n          type: \"text\",\n          onChange: function onChange(event) {\n            return _this3.setState({\n              newCategory: {\n                name: event.target.value\n              },\n              addMode: 'category'\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 511\n          },\n          __self: this\n        })));\n      }\n\n      if (this.state.addAuthor) {\n        titlemodal = \"Add Author\";\n        status = this.state.newAuthor.name === \"\" || this.state.newAuthor.phone === \"\";\n        modalform = React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 521\n          },\n          __self: this\n        }, React.createElement(Col, {\n          md: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 522\n          },\n          __self: this\n        }, React.createElement(Label, {\n          for: \"name\",\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 523\n          },\n          __self: this\n        }, \"Author Name \", React.createElement(\"small\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 523\n          },\n          __self: this\n        }, \"/ Nama Penulis\")), React.createElement(Input, {\n          type: \"text\",\n          onChange: function onChange(event) {\n            var value = event.target.value;\n\n            _this3.setState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                addMode: 'author',\n                newAuthor: _objectSpread({}, prevState.newAuthor, {\n                  name: value\n                })\n              });\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 524\n          },\n          __self: this\n        }), React.createElement(Label, {\n          for: \"name\",\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 536\n          },\n          __self: this\n        }, \"Phone Number \", React.createElement(\"small\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 536\n          },\n          __self: this\n        }, \"/ Nomor Telp\")), React.createElement(Input, {\n          type: \"text\",\n          onChange: function onChange(event) {\n            var value = event.target.value;\n\n            _this3.setState(function (prevState) {\n              return _objectSpread({}, prevState, {\n                addMode: 'author',\n                newAuthor: _objectSpread({}, prevState.newAuthor, {\n                  phone: value\n                })\n              });\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 537\n          },\n          __self: this\n        })));\n      }\n\n      if (this.state.addMaterial) {\n        titlemodal = \"Add Material\";\n        status = this.state.newMaterial.name === \"\";\n        modalform = React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 559\n          },\n          __self: this\n        }, React.createElement(Col, {\n          md: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 560\n          },\n          __self: this\n        }, React.createElement(Label, {\n          for: \"name\",\n          required: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 561\n          },\n          __self: this\n        }, \"Material Name \", React.createElement(\"small\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 561\n          },\n          __self: this\n        }, \"/ Nama Bahan\")), React.createElement(Input, {\n          type: \"text\",\n          onChange: function onChange(event) {\n            return _this3.setState({\n              newMaterial: {\n                name: event.target.value\n              },\n              addMode: 'material'\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 562\n          },\n          __self: this\n        })));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, React.createElement(Prompt, {\n        when: this.state.prompt,\n        message: \"You have unsaved form data. Are you sure you want to leave?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 570\n        },\n        __self: this\n      }), React.createElement(Modal, {\n        isOpen: this.state.modal,\n        fade: false,\n        toggle: this.hideModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          return _this3.AddButtonHandler(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      }, titlemodal), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577\n        },\n        __self: this\n      }, modalform, status ? React.createElement(Button, {\n        disabled: true,\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      }, \"Add\") : React.createElement(Button, {\n        onClick: function onClick(event) {\n          return _this3.AddButtonHandler(event);\n        },\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      }, \"Add\")))), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 4,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588\n        },\n        __self: this\n      }, \"Display Photos \", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588\n        },\n        __self: this\n      }, \"Max 4\"))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590\n        },\n        __self: this\n      }, React.createElement(ImageUploader, {\n        onDrop: this.onDrop,\n        deleted: this.deleteImageHandler,\n        filepreview: this.state.thumbnailFile,\n        maxUpload: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        md: 8,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"card-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 597\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599\n        },\n        __self: this\n      }, \"Product Information\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      }, \"Product Name \", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 603\n        },\n        __self: this\n      }, \"/ Nama Produk\")), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        onChange: function onChange(event) {\n          return _this3.setState({\n            name: event.target.value\n          }, function () {\n            _this3.countFilled();\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604\n        },\n        __self: this\n      })), React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 606\n        },\n        __self: this\n      }, React.createElement(ReactTooltip, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 607\n        },\n        __self: this\n      }), React.createElement(Label, {\n        for: \"name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608\n        },\n        __self: this\n      }, \"Product Category \", React.createElement(\"small\", {\n        \"data-tip\": \"Hubungi tim IT untuk menambahan data jika tidak tersedia\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 608\n        },\n        __self: this\n      }, \"/ Kategori Umum\")), React.createElement(Select, {\n        onChange: function onChange(val) {\n          return _this3.setState({\n            categoryGeneral: val\n          }, function () {\n            _this3.countFilled();\n          });\n        },\n        name: \"categoryGeneral\",\n        value: this.state.categoryGeneral,\n        className: \"basic-multi-select\",\n        options: this.state.category_general_options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 609\n        },\n        __self: this\n      })), React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618\n        },\n        __self: this\n      }, \"Category \", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 618\n        },\n        __self: this\n      }, \"/ Kategori\")), React.createElement(Select, {\n        onChange: function onChange(val) {\n          return _this3.setState({\n            category: val\n          }, function () {\n            _this3.countFilled();\n          });\n        },\n        isMulti: true,\n        name: \"category\",\n        value: this.state.category,\n        className: \"basic-multi-select\",\n        values: this.state.category,\n        options: this.state.category_options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 619\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.newFormHandler,\n        name: \"addCategory\",\n        color: \"primary\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 628\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"nc-icon nc-simple-add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629\n        },\n        __self: this\n      }), \" New Category\")), React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633\n        },\n        __self: this\n      }, \"Author \", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633\n        },\n        __self: this\n      }, \"/ Penulis\")), React.createElement(Select, {\n        onChange: function onChange(val) {\n          return _this3.setState({\n            author: val\n          }, function () {\n            _this3.countFilled();\n          });\n        },\n        isMulti: true,\n        value: this.state.author,\n        name: \"author\",\n        className: \"basic-multi-select\",\n        options: this.state.authors_options,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.newFormHandler,\n        color: \"primary\",\n        size: \"sm\",\n        name: \"addAuthor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 642\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"nc-icon nc-simple-add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 643\n        },\n        __self: this\n      }), \" New Author\")), React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"date_publish\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647\n        },\n        __self: this\n      }, \"Published Date \", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647\n        },\n        __self: this\n      }, \"/ Tanggal Terbit\")), React.createElement(DatePicker, {\n        className: \"form-control\",\n        selected: this.state.publish_date,\n        dateFormat: \"dd-MM-yyyy\",\n        onChange: function onChange(val) {\n          return _this3.setState({\n            publish_date: val\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648\n        },\n        __self: this\n      }))), React.createElement(CardFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656\n        },\n        __self: this\n      })), React.createElement(Card, {\n        className: \"card-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 661\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662\n        },\n        __self: this\n      }, \"Price \", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662\n        },\n        __self: this\n      }, \"/ Harga\"))), React.createElement(CardBody, {\n        style: {\n          minHeight: \"0\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 664\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 665\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 666\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667\n        },\n        __self: this\n      }, \"Price\"), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667\n        },\n        __self: this\n      }, \"/ Harga Jual\")), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668\n        },\n        __self: this\n      }, React.createElement(InputGroupAddon, {\n        addonType: \"prepend\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 670\n        },\n        __self: this\n      }, \"Rp\")), React.createElement(Input, {\n        style: {\n          fontWeight: '700',\n          fontSize: '20pt'\n        },\n        type: \"text\",\n        value: this.formatuang(this.state.base_price),\n        name: \"base_price\",\n        onChange: function onChange(event) {\n          return _this3.onChangeMoneyHandler(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 672\n        },\n        __self: this\n      })))))), React.createElement(Card, {\n        className: \"card-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724\n        },\n        __self: this\n      }, \"Product Detail \", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724\n        },\n        __self: this\n      }, \"/ Detail Produk\"))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 727\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 728\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729\n        },\n        __self: this\n      }, \"Description\", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729\n        },\n        __self: this\n      }, \"/ Deskripsi\"), React.createElement(\"small\", {\n        style: {\n          float: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729\n        },\n        __self: this\n      }, 500 - this.state.description.length, \" / 500\")), React.createElement(Input, {\n        style: {\n          padding: '10px'\n        },\n        type: \"textarea\",\n        value: this.state.description,\n        onChange: function onChange(event) {\n          return _this3.setState({\n            description: event.target.value\n          }, function () {\n            _this3.countFilled();\n          });\n        },\n        name: \"description\",\n        rows: \"10\",\n        cols: \"30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 730\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 740\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 741\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742\n        },\n        __self: this\n      }, \"Weight \", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 742\n        },\n        __self: this\n      }, \"/ Berat\")), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 743\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        value: this.formatuang(this.state.weight),\n        name: \"weight\",\n        onChange: function onChange(event) {\n          return _this3.onChangeMoneyHandler(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 744\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 750\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 751\n        },\n        __self: this\n      }, \"gram\")))), React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756\n        },\n        __self: this\n      }, \"Width \", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 756\n        },\n        __self: this\n      }, \"/ Lebar\")), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 757\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        value: this.formatuang(this.state.width),\n        name: \"width\",\n        onChange: function onChange(event) {\n          return _this3.onChangeMoneyHandler(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 758\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 764\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 765\n        },\n        __self: this\n      }, \"cm\")))), React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 769\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 770\n        },\n        __self: this\n      }, \"Height \", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 770\n        },\n        __self: this\n      }, \"/ Tinggi\")), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 771\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        value: this.formatuang(this.state.height),\n        name: \"height\",\n        onChange: function onChange(event) {\n          return _this3.onChangeMoneyHandler(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 772\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 778\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 779\n        },\n        __self: this\n      }, \"cm\")))), React.createElement(Col, {\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 784\n        },\n        __self: this\n      }, \"Thick \", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 784\n        },\n        __self: this\n      }, \"/ Tebal\")), React.createElement(InputGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        value: this.formatuang(this.state.thick),\n        name: \"thick\",\n        onChange: function onChange(event) {\n          return _this3.onChangeMoneyHandler(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 786\n        },\n        __self: this\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 792\n        },\n        __self: this\n      }, React.createElement(InputGroupText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 793\n        },\n        __self: this\n      }, \"cm\"))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 798\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800\n        },\n        __self: this\n      }, \"Product Edition \", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800\n        },\n        __self: this\n      }, \"/ Edisi Buku\")), React.createElement(Input, {\n        type: \"text\",\n        value: this.formatuang(this.state.version),\n        name: \"version\",\n        onChange: function onChange(event) {\n          return _this3.onChangeMoneyHandler(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 802\n        },\n        __self: this\n      })), React.createElement(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 810\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 811\n        },\n        __self: this\n      }, \"Print Version \", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 811\n        },\n        __self: this\n      }, \"/ Cetakan ke\")), React.createElement(Input, {\n        type: \"text\",\n        value: this.formatuang(this.state.production_version),\n        name: \"production_version\",\n        onChange: function onChange(event) {\n          return _this3.onChangeMoneyHandler(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 813\n        },\n        __self: this\n      })), React.createElement(Col, {\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822\n        },\n        __self: this\n      }, \"Product Pages \", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822\n        },\n        __self: this\n      }, \"/ Total Halaman\")), React.createElement(Input, {\n        type: \"text\",\n        value: this.formatuang(this.state.pages),\n        name: \"pages\",\n        onChange: function onChange(event) {\n          return _this3.onChangeMoneyHandler(event);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 834\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 835\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836\n        },\n        __self: this\n      }, \" ISBN\"), React.createElement(Input, {\n        type: \"text\",\n        value: this.state.isbn,\n        name: \"isbn\",\n        onChange: function onChange(event) {\n          return _this3.setState({\n            isbn: event.target.value\n          }, function () {\n            _this3.countFilled();\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 837\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 845\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 846\n        },\n        __self: this\n      }, React.createElement(Label, {\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 847\n        },\n        __self: this\n      }, \" Material\"), React.createElement(Select, {\n        onChange: function onChange(val) {\n          return _this3.setState({\n            material: val\n          });\n        },\n        isMulti: true,\n        value: this.state.material,\n        name: \"material\",\n        className: \"basic-multi-select\",\n        options: this.state.materials,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 848\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.newFormHandler,\n        name: \"addMaterial\",\n        color: \"primary\",\n        size: \"sm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 856\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"nc-icon nc-simple-add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 857\n        },\n        __self: this\n      }), \" New Material\"))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 861\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 862\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 863\n        },\n        __self: this\n      }, \"Code \", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 863\n        },\n        __self: this\n      }, \"/ Kode Produk\")), React.createElement(Input, {\n        type: \"text\",\n        name: \"sku\",\n        onChange: function onChange(event) {\n          return _this3.setState({\n            sku: event.target.value\n          }, function () {\n            _this3.countFilled();\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 864\n        },\n        __self: this\n      }))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 869\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        style: {\n          textAlign: 'right'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 870\n        },\n        __self: this\n      }, this.state.saveable && this.state.sumFilled > 80 && this.state.thumbnailFile.length > 0 ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 872\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick(event) {\n          return _this3.props.history.push('/dashboard/products');\n        },\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 873\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 874\n        },\n        __self: this\n      }, \"Save & Add New\"), React.createElement(Button, {\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 875\n        },\n        __self: this\n      }, \"Copy & Add New\"), React.createElement(Button, {\n        onClick: this.onSaveHandler,\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 876\n        },\n        __self: this\n      }, \"Save\")) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 879\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        text: \"Waiting for you\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 880\n        },\n        __self: this\n      }))))))), React.createElement(ToastContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 890\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ProductEditor;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    ui: state.ui\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    toggleNotif: function toggleNotif(message) {\n      return dispatch(actionCreator.toggleNotification(message));\n    },\n    setLoading: function setLoading(data) {\n      return dispatch(actionCreator.toggleLoading(data));\n    },\n    toggleToaster: function toggleToaster(payload) {\n      return dispatch(actionCreator.toggleToaster(payload));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductEditor);","map":{"version":3,"sources":["/Users/bagus/Documents/GitHub/ADMIN-STORE/src/views/Input/ProductEditor.jsx"],"names":["React","Component","Card","Button","Modal","ModalHeader","ModalBody","ModalFooter","Input","CardFooter","InputGroup","InputGroupAddon","InputGroupText","CardHeader","CardBody","Row","Col","ImageUploader","Label","Select","Prompt","ReactTooltip","axios","connect","actionCreator","ToastContainer","toast","Loader","DatePicker","ProductList","ProductListAction","ProductCategory","ProductAdd","ProductEdit","ProductCategoryGeneral","NewCategoryAction","AuthorIndex","AuthorCreate","MaterialIndex","MaterialCreate","ProductEditor","props","onChangeMoneyHandler","event","values","target","value","toString","replace","isNum","test","key","name","setState","parseInt","length","countFilled","newFormHandler","preventDefault","addAuthor","addMaterial","addCategory","hideModal","modal","state","onSaveHandler","prompt","content","then","res","status","toaster","isOpenToast","toastMessage","data","toastType","success","catch","err","warn","onDrop","acceptedFiles","rejectedFiles","console","log","handleUploadImages","image","formData","FormData","append","Date","now","post","headers","response","newImages","newArrayofImages","productImagesUrl","concat","title","category","author","material","categoryGeneral","description","base_price","weight","pages","height","thick","isbn","sum","sums","reduce","a","b","pembagi","percent","sumFilled","Math","ceil","deleteImageHandler","index","public_id","delete","thumbnailFile","splice","AddButtonHandler","mode","addMode","newCategory","addedCategory","id","label","oldCategory","warning","map","push","category_options","newAuthor","occupation","phone","addedAuthor","oldAuthor","authors","authors_options","newMaterial","addedMaterial","oldMaterial","materials","showToaster","message","snackBarOption","isOpen","text","create_price","published_price","publish_date","width","stock_level","version","production_version","sku","format","pict_1","pict_2","pict_3","pict_4","pict_5","video_1","video_2","video_3","video_4","video_5","percent_royalti","category_general_options","saveable","amount","comadel","price","forEach","file","URL","revokeObjectURL","preview","setLoading","authorsnya","match","params","modalform","titlemodal","prevState","val","minHeight","fontWeight","fontSize","formatuang","float","padding","textAlign","history","mapStateToProps","ui","mapDispatchToProps","dispatch","toggleNotif","toggleNotification","toggleLoading","toggleToaster","payload"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Card, Button, Modal ,ModalHeader,ModalBody, ModalFooter ,Input, CardFooter, InputGroup,InputGroupAddon,InputGroupText, CardHeader, CardBody, Row, Col } from \"reactstrap\";\n\nimport ImageUploader from '../../components/Products/ImageUploader/ImageUploader.jsx';\nimport {Label} from '../../components/UI/Form/Label/Label';\nimport Select from 'react-select';\nimport { Prompt } from 'react-router-dom';\nimport ReactTooltip from 'react-tooltip'\nimport axios from 'axios';\nimport {connect} from 'react-redux';\nimport * as actionCreator from '../../store/action/index';\nimport { ToastContainer,toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Loader from '../../components/Loader/Loader';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nimport {ProductList as ProductListAction, \n    ProductCategory, \n    ProductAdd,\n    ProductEdit,\n    ProductCategoryGeneral,\n    NewCategoryAction,\n    AuthorIndex,\n    AuthorCreate,\n    MaterialIndex,\n    MaterialCreate\n} from '../../api/index';\n\n\nclass ProductEditor extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name : '',\n            categoryGeneral: {\n                id:4,\n                label:\"Book\",\n                value:4\n            },\n            category: [\n                // { id: 1, value: 'Pertanian', label: 'Pertanian' },\n                // { id: 2, value: 'Peternakan', label: 'Peternakan' },\n                // { id: 3,value: 'Teknologi', label: 'Teknologi' }\n            ],\n            description: '',\n            create_price: 0,\n            published_price: 0,\n            base_price: 0, \n            publish_date: new Date(),                                    \n            weight: 0,            \n            isbn : '',\n            status: 'draft',            \n            height: 0,\n            width: 0,\n            thick: 0,\n            stock_level: 0,\n            version: 1,\n            production_version: 1,\n            sku: '',\n            format: null,       \n            pict_1 : null,\n            pict_2 : null,\n            pict_3 : null,\n            pict_4 : null,\n            pict_5 : null,\n            video_1 : null,\n            video_2 : null,\n            video_3 : null,\n            video_4 : null,\n            video_5 : null,\n            material : [],\n            percent_royalti: null,\n            author:[],\n            pages: 0,\n            category_general_options :[],\n            category_options :[\n                // { id: 1, value: 'Pertanian', label: 'Pertanian' },\n                // { id: 2, value: 'Peternakan', label: 'Peternakan' },\n                // { id: 3,value: 'Teknologi', label: 'Teknologi' }\n              ],\n            materials: [\n                // {id:1, value: 'Book Paper', label:'Book Paper'},\n                // {id:2, value: 'Soft Cover', label:'Soft Cover'},\n                // {id:3, value: 'Art Carton', label:'Art Carton'},\n            ],\n            authors_options: [\n                // {id:1, value: 'Author 1', label:'Author 1'},\n                // {id:2, value: 'Author 2', label:'Author 2'},\n                // {id:3, value: 'Author 3', label:'Author 3'},\n            ],\n            addCategory : false,\n            addAuthor : false,\n            addMaterial: false,\n            saveable:true,\n            addMode: null,\n            modal:false,\n            newCategory: {\n                name: '',\n            },\n            newAuthor: {\n                name: '',\n                occupation:'',\n                phone:''\n            },\n            newMaterial: {\n                name: '',\n            },\n            thumbnailFile: [],\n            productImagesUrl: [],\n            sumFilled:0,\n            prompt:true\n        }        \n    }\n\n    formatuang(amount) {\n        if(amount === null){\n            amount = 0;\n        }\n        // deletecomma\n        let comadel = amount.toString().replace(/\\,/g,'');        \n        let price = comadel.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");;\n\t\treturn price;\n    }\n\n    onChangeMoneyHandler= (event) => { \n        \n        // validasi input tidak boleh huruf\n        let values = event.target.value.toString().replace(/\\,/g,'');\n        \n        let isNum = /^\\d+$/.test(values);\n        let key = event.target.name;        \n        if(isNum || event.target.value === null) {\n            this.setState({[key]:parseInt(values)})  \n        }\n        else if (values.length <= 1){\n            this.setState({[key]:0})  \n        }    \n        this.countFilled();         \n    }\n\n    newFormHandler = (event) => {\n        event.preventDefault();\n        let name = event.target.name;\n        this.setState({addAuthor:false, addMaterial:false, addCategory:false});\n        this.setState({[name]:true,modal:true})\n    }\n\n    hideModal = () => {\n        this.setState({\n            modal:!this.state.modal\n        })\n    }\n\n    onSaveHandler = (event) => {\n        this.setState({prompt:false}, ()=> {\n            event.preventDefault();\n            const content = this.state;\n            ProductAdd(content).then(res => {                \n                if(res.status === \"success\"){\n                    const toaster = {\n                        isOpenToast: true,\n                        toastMessage: res.data.name+ \" Succesfully Added\",\n                        toastType:'success',\n                    }\n                    \n                    toast.success(res.data.name+ \" Successfully Added\");\n                    // this.props.history.replace('/dashboard/products');\n                    // this.props.history.push('/dashboard/products');\n                    // this.props.toggleToaster(toaster)\n                }   \n            }).catch(err=> {\n                toast.warn(\"Whoops Something Error\" + err); \n            });\n        })\n       \n    }\n\n    // Image Processing \n    onDrop = (acceptedFiles, rejectedFiles) => {  \n        console.log(acceptedFiles)\n        // this.setState({saveable:false})\n        // const max_file_count = 4 - this.state.thumbnailFile.length;\n        // const array_images = this.state.thumbnailFile.concat(\n        //     files.slice(0, max_file_count).map((file) => \n        //         // if(file.size < 2000000){\n        //             Object.assign(file, {   \n        //                 preview: URL.createObjectURL(file)\n        //             })\n        //         // }else{\n        //         //     toast.warning(\"Please Upload File max size file <2 MB\")\n        //         // }\n                                           \n        //     ));      \n\n        // this.setState({thumbnailFile: array_images});        \n        // // uploading to cloudinary directly\n        // files.slice(0, max_file_count).map((file)=> {            \n        //     this.handleUploadImages(file).then(()=> {\n        //         this.setState({saveable:true})\n        //         this.countFilled();  \n        //     })  ;            \n        // })\n           \n    }\n\n    // This function does the uploading to cloudinary\n    handleUploadImages = (image) => {        \n        console.log(image);\n        // uploads is an array that would hold all the post methods for each image to be uploaded, then we'd use axios.all()\n              \n        // our formdata\n        const formData = new FormData();\n        formData.append(\"file\", image);\n        formData.append(\"tags\", ['product','halo']); // Add tags for the images - {Array}\n        formData.append(\"upload_preset\", \"blst_product\"); // Replace the preset name with your own\n        formData.append(\"api_key\", \"387685966233372\"); // Replace API key with your own Cloudinary API key\n        formData.append(\"folder\",\"product\");\n        formData.append(\"quality\",\"low\");        \n        formData.append(\"timestamp\", (Date.now() / 1000) | 0);\n        console.log(formData);\n        // Replace cloudinary upload URL with yours\n        return axios.post(\n            \"https://api.cloudinary.com/v1_1/blst/image/upload\",\n            formData, \n            { headers: { \"X-Requested-With\": \"XMLHttpRequest\" }})\n            .then(response => {\n                console.log(response.data)\n                // const oldImages = this.state.productImagesUrl;\n                const newImages = response.data;\n                const newArrayofImages = this.state.productImagesUrl.concat(newImages);\n                this.setState({productImagesUrl:newArrayofImages});\n            })\n    }\n\n    countFilled = () => {\n        const title= this.state.name !== '' ? 1 : 0;\n        const category= this.state.category.length !== 0 ? 1 : 0;\n        const author= this.state.author.length !== 0 ? 1 : 0;\n        const productImagesUrl= this.state.productImagesUrl.length !== 0 ? 1 : 0;\n        const material= this.state.category.material !== 0 ? 1 : 0;\n        const categoryGeneral = this.state.categoryGeneral.length !== 0 ? 1 : 0;\n        const description= this.state.description !== '' ? 1 : 0;\n        const base_price= this.state.base_price !== 0 ? 1 : 0;\n        const weight= this.state.weight !== 0 ? 1 : 0;\n        const pages= this.state.pages !== 0 ? 1 : 0;\n        const height= this.state.weight !== 0 ? 1 : 0;\n        const thick= this.state.weight !== 0 ? 1 : 0;\n        const isbn= this.state.isbn !== '' ? 1 : 0;\n\n        const sum =\n        [title ,\n        category ,\n        author ,\n        productImagesUrl ,\n        material ,\n        categoryGeneral ,\n        description ,\n        base_price ,\n        weight ,\n        pages ,\n        height ,\n        thick ,\n        isbn];        \n\n        const sums = sum.reduce((a, b) => a + b, 0);\n        const pembagi = sum.length;\n        const percent = (sums/pembagi)*100;        \n\n        this.setState({sumFilled:Math.ceil(percent)})\n    }\n\n\n    deleteImageHandler = (event,index) => {\n       event.preventDefault();       \n       const public_id = this.state.productImagesUrl[index];\n        \n       if(typeof public_id !== 'undefined'){\n           axios.delete(\"https://api.cloudinary.com/v1_1/blst/image/upload?public_ids[]=\"+public_id.public_id).then(res=>{\n               console.log(res)\n           });       \n       } \n\n       this.state.thumbnailFile.splice(index, 1);         \n       this.setState({thumbnailFile: this.state.thumbnailFile});   \n    }\n\n    componentWillUnmount() {\n        console.log(\"[Will Unmount]\")\n        // Make sure to revoke the data uris to avoid memory leaks\n        this.state.thumbnailFile.forEach(file => URL.revokeObjectURL(file.preview))\n      }\n\n    componentWillMount() {\n        console.log(\"[WILL MOUNT]\")\n    }\n    \n    componentDidMount() {\n        console.log(\"[DIDMOUNT]\")\n        // call for CategoryGeneral\n        this.props.setLoading(true)\n        const categoryGeneral = [];\n        const content = {}\n        ProductCategoryGeneral(content).then(res => {\n            res.map((value,key)=> {\n                categoryGeneral.push({\n                    id: value.id,\n                    value: value.id,\n                    label:value.name\n                });\n            });\n            \n        }).then(res => {\n            this.setState({category_general_options:categoryGeneral});\n            this.props.setLoading(false)       \n        }).catch(err => \n            toast.warn(\"Network Error, Can't get catogory data from server \" + err) ); \n            this.props.setLoading(false);\n            \n        // call for Category\n        const category = [];\n        ProductCategory().then(res=> {\n            res.map((value,key)=> {\n                category.push({\n                    id:value.id,\n                    value:value.name,\n                    label:value.name\n                })\n            })\n            this.setState({category_options: category})\n        })\n\n        // call for Material\n        const materials= [];\n        MaterialIndex().then(res=> {\n            res.map((value,key)=> {\n                materials.push({\n                    id:value.id,\n                    value:value.id,\n                    label:value.name\n                })\n            })                    \n            this.setState({materials: materials})\n        });\n\n        // call for author\n        const authorsnya = [];\n        AuthorIndex().then(res => {\n            res.map((value,key)=> {\n                authorsnya.push({\n                    id:value.id,\n                    value:value.name,\n                    label:value.name\n                })\n            })\n            this.setState({authors_options:authorsnya})\n        });      \n        \n        // if status == edit\n        if(this.props.match.params.status === \"edit\"){\n            const content = {\n                id: this.props.match.params.id\n            }\n            ProductEdit(content).then(res=> {\n                console.log(res);\n            })\n        }\n    }\n    \n\n    // Handling untuk penambahan category, material, author\n    AddButtonHandler = (event) => {\n        event.preventDefault();\n        const mode = this.state.addMode;\n        \n        if(mode === 'category'){\n           const content = {\n                name : this.state.newCategory.name\n            }            \n            NewCategoryAction(content).then(res => {                \n                if(res.status === \"success\"){\n                    toast.success(\"Material Added Successfully\");\n                    this.hideModal()                    \n                    const addedCategory = {\n                        id: res.data.id,\n                        value:res.data.id,\n                        label:res.data.name\n                    }\n                    const oldCategory = this.state.category;\n                    const newCategory = oldCategory.concat(addedCategory);                    \n                    this.setState({category:newCategory})\n                }else{\n                    toast.warning(\"Error Please Reload\");                    \n                }                \n            }).then((res) => {                \n                const category = [];\n                ProductCategory().then(res=> {\n                    res.map((value,key)=> {\n                        category.push({\n                            id:value.id,\n                            value:value.id,\n                            label:value.name\n                        })\n                    })\n                    this.setState({category_options: category})\n                });\n            })\n        }\n\n        if(mode === 'author'){\n            const content = {\n                name : this.state.newAuthor.name,\n                occupation: this.state.newAuthor.occupation,\n                phone: this.state.newAuthor.phone\n            }   \n            console.log(content)         \n            AuthorCreate(content).then(res => {                \n                if(res.status === \"success\"){\n                    toast.success(\"Author Added Successfully\");\n                    this.hideModal();\n                                 \n                    const addedAuthor = {\n                        id: res.data.id,\n                        value:res.data.id,\n                        label:res.data.name\n                    }\n                    \n                    const oldAuthor = this.state.author;\n                    const newAuthor = oldAuthor.concat(addedAuthor);                    \n                    this.setState({author:newAuthor})\n                }else{\n                    toast.warning(\"Error Please Reload\");                    \n                }                \n            }).then((res) => {                \n                const authors = [];\n                AuthorIndex().then(res=> {\n                    res.map((value,key)=> {\n                        authors.push({\n                            id:value.id,\n                            value:value.id,\n                            label:value.name\n                        })\n                    })\n                    console.log(authors)\n                    this.setState({authors_options: authors})\n                });\n            })\n        }\n\n        if(mode === 'material'){\n            const content = {\n                name : this.state.newMaterial.name,                \n            }            \n            MaterialCreate(content).then(res => {    \n                console.log(res)            \n                if(res.status === \"success\"){\n                    toast.success(\"Material Added Successfully\");\n                    this.hideModal()                    \n                    const addedMaterial = {\n                        id: res.data.id,\n                        value:res.data.id,\n                        label:res.data.name\n                    }\n                    \n                    const oldMaterial = this.state.material;\n                    const newMaterial = oldMaterial.concat(addedMaterial);                    \n                    this.setState({material:newMaterial})\n                }else{\n                    toast.warning(\"Error Please Reload\");                    \n                }                \n            }).then((res) => {                \n                const materials = [];\n                MaterialIndex().then(res=> {\n                    res.map((value,key)=> {\n                        materials.push({\n                            id:value.id,\n                            value:value.id,\n                            label:value.name\n                        })\n                    })                    \n                    this.setState({materials: materials})\n                });\n            })\n        }\n        \n    }\n\n    showToaster = (message) => {\n        const snackBarOption = {\n              isOpen: true,\n              text: message\n            };              \n      }\n    \n\n\n    render() {\n        console.log(\"[RENDER]\")              \n        let modalform = null;\n        let titlemodal = null;\n        let status = false;\n\n        if(this.state.addCategory){\n            titlemodal = \"Add Category\"\n            status = this.state.newCategory.name === \"\";\n            modalform =      \n                <Row>\n                    <Col md={12}>\n                    <Label for=\"nasme\" required>Category Name <small>/ Nama Kategori</small></Label>   \n                    <Input type=\"text\" onChange={(event)=> this.setState({newCategory: {name:event.target.value},addMode:'category'})}></Input>\n                    </Col>\n                </Row>         \n        }\n\n        if(this.state.addAuthor){\n            titlemodal = \"Add Author\"\n            status = this.state.newAuthor.name === \"\" || this.state.newAuthor.phone === \"\";\n           \n            modalform =      \n                <Row>\n                    <Col md={12}>\n                    <Label for=\"name\" required>Author Name <small>/ Nama Penulis</small></Label>   \n                    <Input type=\"text\" onChange={(event)=> {\n                        const value = event.target.value;                        \n                        this.setState((prevState)=> ({\n                        ...prevState,\n                        addMode:'author',\n                        newAuthor: {\n                            ...prevState.newAuthor,\n                            name:value\n                                    }\n                                                    }))\n                        }}\n                        ></Input>\n                    <Label for=\"name\" required>Phone Number <small>/ Nomor Telp</small></Label>   \n                    <Input type=\"text\" \n                        onChange={(event)=> {\n                            const value = event.target.value;                        \n                            this.setState((prevState)=> ({\n                            ...prevState,\n                            addMode:'author',\n                            newAuthor: {\n                                ...prevState.newAuthor,\n                                phone:value\n                                        }\n                                }))\n                            }}\n                    \n                    ></Input>\n                    </Col>\n                </Row>         \n        }\n        \n        if(this.state.addMaterial){\n            titlemodal = \"Add Material\"\n            status = this.state.newMaterial.name === \"\";\n            modalform =      \n                <Row>\n                    <Col md={12}>\n                    <Label for=\"name\" required>Material Name <small>/ Nama Bahan</small></Label>   \n                    <Input type=\"text\" onChange={(event)=> this.setState({newMaterial: {name:event.target.value},addMode:'material'})}></Input>\n                    </Col>\n                </Row>         \n        }\n       \n        return (\n            \n        <div className=\"content\">       \n        <Prompt when={this.state.prompt}  message=\"You have unsaved form data. Are you sure you want to leave?\" />     \n        {/* Modal Tambah */}\n        <Modal isOpen={this.state.modal} fade={false} toggle={this.hideModal}>                    \n            <form onSubmit={(event) => this.AddButtonHandler(event)}>\n            <ModalHeader>\n                {titlemodal}\n            </ModalHeader>\n            <ModalBody>\n                    {modalform}\n                {status ? <Button disabled size=\"sm\">Add</Button> : <Button onClick={(event) => this.AddButtonHandler(event)}  size=\"sm\">Add</Button> } \n            </ModalBody>            \n            </form>\n        </Modal>         \n        <form>\n        <Row>\n            <Col md={4} xs={12}>                                               \n                <Card className=\"card-user\">\n                    <CardHeader>\n                    <h6>Display Photos <small>Max 4</small></h6>\n                    </CardHeader>    \n                    <CardBody>\n                        <ImageUploader onDrop={this.onDrop} deleted={this.deleteImageHandler} filepreview={this.state.thumbnailFile} maxUpload={4} />\n                    </CardBody>\n                </Card>                                                \n            </Col>\n          <Col md={8} xs={12}>\n            {/* General Information */}\n            <Card className=\"card-user\">\n                <CardHeader>\n                    <h6>Product Information</h6>\n                </CardHeader>\n                <CardBody>                    \n                    <Col md={12}>\n                        <Label for=\"name\" required>Product Name <small>/ Nama Produk</small></Label>                        \n                        <Input type=\"text\" name=\"name\" onChange={(event)=> this.setState({name: event.target.value},()=>{this.countFilled()})}></Input>\n                    </Col>\n                    <Col md={12}>\n                    <ReactTooltip />  \n                        <Label for=\"name\" required>Product Category <small data-tip=\"Hubungi tim IT untuk menambahan data jika tidak tersedia\">/ Kategori Umum</small></Label>   \n                        <Select\n                            onChange={(val)=> this.setState({categoryGeneral: val},()=>{this.countFilled()})}                            \n                            name=\"categoryGeneral\"\n                            value={this.state.categoryGeneral}\n                            className=\"basic-multi-select\"\n                            options={this.state.category_general_options}\n                        />                                                                  \n                    </Col>\n                    <Col md={12}>\n                        <Label for=\"name\" required>Category <small>/ Kategori</small></Label>   \n                        <Select\n                            onChange={(val)=> this.setState({category: val},()=>{this.countFilled()})}\n                            isMulti\n                            name=\"category\"\n                            value={this.state.category}\n                            className=\"basic-multi-select\"\n                            values={this.state.category}\n                            options={this.state.category_options}\n                        />   \n                        <Button onClick={this.newFormHandler} name=\"addCategory\" color=\"primary\" size=\"sm\"> \n                            <i className=\"nc-icon nc-simple-add\"></i> New Category\n                        </Button>                                          \n                    </Col>\n                    <Col md={12}>\n                        <Label for=\"name\" required>Author <small>/ Penulis</small></Label>   \n                        <Select\n                            onChange={(val)=> this.setState({author: val},()=>{this.countFilled()})}\n                            isMulti\n                            value={this.state.author}\n                            name=\"author\"\n                            className=\"basic-multi-select\"\n                            options={this.state.authors_options}\n                        />   \n                        <Button onClick={this.newFormHandler} color=\"primary\" size=\"sm\" name=\"addAuthor\"> \n                            <i className=\"nc-icon nc-simple-add\"></i> New Author\n                        </Button>                                          \n                    </Col>\n                    <Col md={12}>\n                        <Label for=\"date_publish\" required>Published Date <small>/ Tanggal Terbit</small></Label>   \n                        <DatePicker\n                            className=\"form-control\"\n                            selected={this.state.publish_date}\n                            dateFormat=\"dd-MM-yyyy\"\n                            onChange={(val) => this.setState({publish_date:val})}\n                        />                                                                                \n                    </Col>\n                </CardBody>\n                <CardFooter>\n\n                </CardFooter>\n            </Card>\n            <Card className=\"card-user\">\n                <CardHeader>\n                    <h6>Price <small>/ Harga</small></h6>\n                </CardHeader>\n                <CardBody style={{minHeight:\"0\"}}>\n                <Row>\n                        <Col md={12}>\n                            <Label for=\"name\" required><strong>Price</strong><small>/ Harga Jual</small></Label>                        \n                            <InputGroup>\n                                <InputGroupAddon addonType=\"prepend\">\n                                    <InputGroupText>Rp</InputGroupText>\n                                </InputGroupAddon>\n                                <Input style={{fontWeight:'700', fontSize:'20pt'}}\n                                    type=\"text\" \n                                    value={this.formatuang(this.state.base_price)} \n                                    name=\"base_price\"                             \n                                    onChange={(event)=> this.onChangeMoneyHandler(event)}>\n                                </Input>\n                            </InputGroup>                            \n                        </Col>  \n                        {/* <Col md={6}>\n                            <Label for=\"name\" required>Promo Price <small>/ Harga Promo</small></Label>                        \n                            <Input \n                                type=\"text\" \n                                value={this.formatuang(this.state.promo_price)} \n                                name=\"promo_price\"                             \n                                onChange={(event)=> this.onChangeMoneyHandler(event)}>\n                            </Input>\n                        </Col>                                                             */}\n                    </Row>\n                    {/* <Row>\n                        <Col md={6}>\n                            <Label for=\"name\" required>Production Price <small>/ HPP</small></Label>                        \n                            <InputGroup>\n                                <InputGroupAddon addonType=\"prepend\">\n                                    <InputGroupText>Rp</InputGroupText>\n                                </InputGroupAddon>\n                                <Input \n                                    type=\"text\" \n                                    value={this.formatuang(this.state.create_price)} \n                                    name=\"create_price\"                             \n                                    onChange={(event)=> this.onChangeMoneyHandler(event)}>\n                                </Input>\n                            </InputGroup>\n                        </Col>  \n                        <Col md={6}>\n                            <Label for=\"name\" required>Release Price <small>/ Harga Terbit</small></Label>                        \n                            <InputGroup>\n                                <InputGroupAddon addonType=\"prepend\">\n                                        <InputGroupText>Rp</InputGroupText>\n                                </InputGroupAddon>\n                                <Input \n                                    type=\"text\" \n                                    value={this.formatuang(this.state.published_price)} \n                                    name=\"published_price\"                             \n                                    onChange={(event)=> this.onChangeMoneyHandler(event)}>\n                                </Input>\n                            </InputGroup>                            \n                        </Col>                                                            \n                    </Row> */}\n                </CardBody>\n            </Card>\n            <Card className=\"card-user\">\n                <CardHeader>\n                    <h6>Product Detail <small>/ Detail Produk</small></h6>\n                </CardHeader>\n                <CardBody>\n                    <Row>\n                        <Col md={12}>\n                        <Label for=\"name\" required>Description<small>/ Deskripsi</small><small style={{float:'right'}}>{500 - this.state.description.length} / 500</small></Label>                                            \n                            <Input style={{padding:'10px'}}\n                                type=\"textarea\" \n                                value={this.state.description} \n                                onChange={(event)=> this.setState({description:event.target.value},()=>{this.countFilled()})}\n                                name=\"description\"       \n                                rows=\"10\"\n                                cols=\"30\">\n                            </Input>                            \n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={3}>\n                                <Label for=\"name\" required>Weight <small>/ Berat</small></Label>                        \n                                <InputGroup>                                    \n                                    <Input \n                                        type=\"text\" \n                                        value={this.formatuang(this.state.weight)} \n                                        name=\"weight\"                             \n                                        onChange={(event)=> this.onChangeMoneyHandler(event)}>\n                                    </Input>\n                                    <InputGroupAddon addonType=\"append\">\n                                            <InputGroupText>gram</InputGroupText>\n                                    </InputGroupAddon>\n                                </InputGroup>   \n                        </Col>\n                        <Col md={3}>\n                                <Label for=\"name\" required>Width <small>/ Lebar</small></Label>                        \n                                <InputGroup>                                    \n                                    <Input \n                                        type=\"text\" \n                                        value={this.formatuang(this.state.width)} \n                                        name=\"width\"                             \n                                        onChange={(event)=> this.onChangeMoneyHandler(event)}>\n                                    </Input>\n                                    <InputGroupAddon addonType=\"append\">\n                                            <InputGroupText>cm</InputGroupText>\n                                    </InputGroupAddon>\n                                </InputGroup>   \n                        </Col>\n                        <Col md={3}>\n                                <Label for=\"name\" required>Height <small>/ Tinggi</small></Label>                        \n                                <InputGroup>                                    \n                                    <Input \n                                        type=\"text\" \n                                        value={this.formatuang(this.state.height)} \n                                        name=\"height\"                             \n                                        onChange={(event)=> this.onChangeMoneyHandler(event)}>\n                                    </Input>\n                                    <InputGroupAddon addonType=\"append\">\n                                            <InputGroupText>cm</InputGroupText>\n                                    </InputGroupAddon>\n                                </InputGroup>   \n                        </Col>\n                        <Col md={3}>\n                                <Label for=\"name\" required>Thick <small>/ Tebal</small></Label>                        \n                                <InputGroup>                                    \n                                    <Input \n                                        type=\"text\" \n                                        value={this.formatuang(this.state.thick)} \n                                        name=\"thick\"                             \n                                        onChange={(event)=> this.onChangeMoneyHandler(event)}>\n                                    </Input>\n                                    <InputGroupAddon addonType=\"append\">\n                                            <InputGroupText>cm</InputGroupText>\n                                    </InputGroupAddon>\n                                </InputGroup>   \n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={4}>\n                                <Label for=\"name\" required>Product Edition <small>/ Edisi Buku</small></Label>                        \n                                                                    \n                                    <Input \n                                        type=\"text\" \n                                        value={this.formatuang(this.state.version)} \n                                        name=\"version\"                             \n                                        onChange={(event)=> this.onChangeMoneyHandler(event)}>\n                                    </Input>                                   \n                                  \n                        </Col>\n                        <Col md={4}>\n                                <Label for=\"name\" required>Print Version <small>/ Cetakan ke</small></Label>                        \n                                                                    \n                                    <Input \n                                        type=\"text\" \n                                        value={this.formatuang(this.state.production_version)} \n                                        name=\"production_version\"                             \n                                        onChange={(event)=> this.onChangeMoneyHandler(event)}>\n                                    </Input>                                   \n                                  \n                        </Col>                        \n                        <Col md={4}>\n                                <Label for=\"name\">Product Pages <small>/ Total Halaman</small></Label>                        \n                                                                    \n                                    <Input \n                                        type=\"text\" \n                                        value={this.formatuang(this.state.pages)} \n                                        name=\"pages\"                             \n                                        onChange={(event)=> this.onChangeMoneyHandler(event)}>\n                                    </Input>                                   \n                                  \n                        </Col>\n                        \n                    </Row>\n                    <Row>\n                        <Col md={12}>\n                            <Label> ISBN</Label>\n                            <Input \n                                type=\"text\" \n                                value={this.state.isbn} \n                                name=\"isbn\"                             \n                                onChange={(event)=> this.setState({isbn:event.target.value},()=>{this.countFilled()})}>\n                            </Input>    \n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={12}>\n                            <Label required> Material</Label>\n                            <Select\n                            onChange={(val)=> this.setState({material: val})}\n                            isMulti\n                            value={this.state.material}\n                            name=\"material\"\n                            className=\"basic-multi-select\"\n                            options={this.state.materials}\n                            />  \n                            <Button onClick={this.newFormHandler} name=\"addMaterial\" color=\"primary\" size=\"sm\"> \n                            <i className=\"nc-icon nc-simple-add\"></i> New Material\n                            </Button> \n                        </Col>\n                    </Row>\n                    <Row>\n                    <Col md={12}>\n                        <Label for=\"name\">Code <small>/ Kode Produk</small></Label>                        \n                        <Input type=\"text\" name=\"sku\" onChange={(event)=> this.setState({sku: event.target.value},()=>{this.countFilled()})}></Input>\n                    </Col>\n                    </Row>\n                </CardBody>\n            </Card>\n            <Row >\n            <Col md={12} style={{textAlign:'right'}}>\n                    {this.state.saveable  && this.state.sumFilled > 80 && this.state.thumbnailFile.length > 0 ? (\n                        <div>                        \n                        <Button onClick={(event) => this.props.history.push('/dashboard/products')} color=\"secondary\">Cancel</Button>\n                        <Button color=\"secondary\" >Save & Add New</Button>\n                        <Button color=\"secondary\" >Copy & Add New</Button>\n                        <Button onClick={this.onSaveHandler} color=\"success\" >Save</Button>                        \n                        </div>                        \n                    ) : (\n                        <div>\n                            <Loader text=\"Waiting for you\"/>\n                        </div>\n                    )}\n                \n            </Col>\n            </Row>\n          </Col>\n        </Row>\n        \n        </form>\n        <ToastContainer />\n      </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ui: state.ui    \n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      toggleNotif: (message) => dispatch(actionCreator.toggleNotification(message)),\n      setLoading: (data) => dispatch(actionCreator.toggleLoading(data)),\n      toggleToaster: (payload) => dispatch(actionCreator.toggleToaster(payload))\n    };\n  }\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ProductEditor);"]},"metadata":{},"sourceType":"module"}
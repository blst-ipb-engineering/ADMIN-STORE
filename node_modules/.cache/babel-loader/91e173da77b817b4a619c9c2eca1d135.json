{"ast":null,"code":"import _classCallCheck from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bagus/Documents/GitHub/ADMIN-STORE/src/layouts/Dashboard/Dashboard.jsx\";\nimport React from \"react\"; // javascript plugin used to create scrollbars on windows\n\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport Header from \"../../components/Header/Header.jsx\";\nimport Footer from \"../../components/Footer/Footer.jsx\";\nimport Sidebar from \"../../components/Sidebar/Sidebar.jsx\"; // import FixedPlugin from \"../../components/FixedPlugin/FixedPlugin.jsx\";\n\nimport dashboardRoutes from \"../../routes/dashboard\"; // View\n\nimport Dashboards from \"../../views/Dashboard/Dashboard.jsx\";\nimport Notifications from \"../../views/Notifications/Notifications.jsx\";\nimport Icons from \"../../views/Icons/Icons.jsx\";\nimport Typography from \"../../views/Typography/Typography.jsx\";\nimport TableList from \"../../views/TableList/TableList.jsx\";\nimport Maps from \"../../views/Maps/Maps.jsx\";\nimport UserPage from \"../../views/UserPage/UserPage.jsx\";\nvar ps;\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.handleActiveClick = function (color) {\n      _this.setState({\n        activeColor: color\n      });\n    };\n\n    _this.handleBgClick = function (color) {\n      _this.setState({\n        backgroundColor: color\n      });\n    };\n\n    _this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\"\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps = new PerfectScrollbar(this.refs.mainPanel);\n        document.body.classList.toggle(\"perfect-scrollbar-on\");\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.body.classList.toggle(\"perfect-scrollbar-on\");\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(e) {\n      if (e.history.action === \"PUSH\") {\n        this.refs.mainPanel.scrollTop = 0;\n        document.scrollingElement.scrollTop = 0;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var routes = React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      });\n\n      if (this.props.isAuth) {\n        routes = React.createElement(Switch, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(Route, {\n          path: \"/dashboard\",\n          exact: true,\n          component: Dashboards,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/dashboard/icons\",\n          exact: true,\n          component: Maps,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/dashboard/maps\",\n          exact: true,\n          component: Maps,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/dashboard/notifications\",\n          exact: true,\n          component: Notifications,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/dashboard/user-page\",\n          exact: true,\n          component: UserPage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/dashboard/tables\",\n          exact: true,\n          component: TableList,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }), React.createElement(Route, {\n          path: \"/dashboard/typography\",\n          exact: true,\n          component: Typography,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Sidebar, Object.assign({}, this.props, {\n        routes: dashboardRoutes,\n        bgColor: this.state.backgroundColor,\n        activeColor: this.state.activeColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"main-panel\",\n        ref: \"mainPanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Header, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), routes, React.createElement(Footer, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuth: state.authsd.token !== null\n  };\n};\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["/Users/bagus/Documents/GitHub/ADMIN-STORE/src/layouts/Dashboard/Dashboard.jsx"],"names":["React","PerfectScrollbar","Route","Switch","Redirect","connect","Header","Footer","Sidebar","dashboardRoutes","Dashboards","Notifications","Icons","Typography","TableList","Maps","UserPage","ps","Dashboard","props","handleActiveClick","color","setState","activeColor","handleBgClick","backgroundColor","state","navigator","platform","indexOf","refs","mainPanel","document","body","classList","toggle","destroy","e","history","action","scrollTop","scrollingElement","routes","isAuth","Component","mapStateToProps","authsd","token"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,gBAAP,MAA6B,mBAA7B;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,OAAP,MAAoB,sCAApB,C,CACA;;AAEA,OAAOC,eAAP,MAA4B,wBAA5B,C,CAEA;;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,aAAP,MAA0B,6CAA1B;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AACA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,OAAOC,QAAP,MAAqB,mCAArB;AAGA,IAAIC,EAAJ;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,mFAAMA,KAAN;;AADgB,UAyBlBC,iBAzBkB,GAyBE,UAACC,KAAD,EAAW;AAC7B,YAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF;AAAf,OAAd;AACD,KA3BiB;;AAAA,UA4BlBG,aA5BkB,GA4BF,UAACH,KAAD,EAAW;AACzB,YAAKC,QAAL,CAAc;AAAEG,QAAAA,eAAe,EAAEJ;AAAnB,OAAd;AACD,KA9BiB;;AAEhB,UAAKK,KAAL,GAAa;AACXD,MAAAA,eAAe,EAAE,OADN;AAEXF,MAAAA,WAAW,EAAE;AAFF,KAAb;AAFgB;AAMjB;;;;wCACmB;AAClB,UAAII,SAAS,CAACC,QAAV,CAAmBC,OAAnB,CAA2B,KAA3B,IAAoC,CAAC,CAAzC,EAA4C;AAC1CZ,QAAAA,EAAE,GAAG,IAAIhB,gBAAJ,CAAqB,KAAK6B,IAAL,CAAUC,SAA/B,CAAL;AACAC,QAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,sBAA/B;AACD;AACF;;;2CACsB;AACrB,UAAIR,SAAS,CAACC,QAAV,CAAmBC,OAAnB,CAA2B,KAA3B,IAAoC,CAAC,CAAzC,EAA4C;AAC1CZ,QAAAA,EAAE,CAACmB,OAAH;AACAJ,QAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,MAAxB,CAA+B,sBAA/B;AACD;AACF;;;uCACkBE,C,EAAG;AACpB,UAAIA,CAAC,CAACC,OAAF,CAAUC,MAAV,KAAqB,MAAzB,EAAiC;AAC/B,aAAKT,IAAL,CAAUC,SAAV,CAAoBS,SAApB,GAAgC,CAAhC;AACAR,QAAAA,QAAQ,CAACS,gBAAT,CAA0BD,SAA1B,GAAsC,CAAtC;AACD;AACF;;;6BAOQ;AACP,UAAIE,MAAM,GAAG,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAb;;AAEA,UAAI,KAAKvB,KAAL,CAAWwB,MAAf,EAAuB;AACrBD,QAAAA,MAAM,GACJ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,YAAZ;AAAyB,UAAA,KAAK,MAA9B;AAA+B,UAAA,SAAS,EAAEhC,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,kBAAZ;AAA+B,UAAA,KAAK,MAApC;AAAqC,UAAA,SAAS,EAAEK,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EAGE,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,iBAAZ;AAA8B,UAAA,KAAK,MAAnC;AAAoC,UAAA,SAAS,EAAEA,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF,EAIE,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,0BAAZ;AAAuC,UAAA,KAAK,MAA5C;AAA6C,UAAA,SAAS,EAAEJ,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,EAKE,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,sBAAZ;AAAmC,UAAA,KAAK,MAAxC;AAAyC,UAAA,SAAS,EAAEK,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,EAME,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,mBAAZ;AAAgC,UAAA,KAAK,MAArC;AAAsC,UAAA,SAAS,EAAEF,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,EAOE,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,uBAAZ;AAAoC,UAAA,KAAK,MAAzC;AAA0C,UAAA,SAAS,EAAED,UAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,CADF;AAYD;;AAED,aACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD,oBACM,KAAKM,KADX;AAEE,QAAA,MAAM,EAAEV,eAFV;AAGE,QAAA,OAAO,EAAE,KAAKiB,KAAL,CAAWD,eAHtB;AAIE,QAAA,WAAW,EAAE,KAAKC,KAAL,CAAWH,WAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAOE;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,GAAG,EAAC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD,oBAAY,KAAKJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,EAEGuB,MAFH,EAqBE,oBAAC,MAAD;AAAQ,QAAA,KAAK,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBF,CAPF,CADF;AAuCD;;;;EAzFqB1C,KAAK,CAAC4C,S;;AA4F9B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAnB,KAAK,EAAI;AAC/B,SAAO;AACLiB,IAAAA,MAAM,EAAGjB,KAAK,CAACoB,MAAN,CAAaC,KAAb,KAAuB;AAD3B,GAAP;AAGD,CAJD;;AAMA,eAAe1C,OAAO,CAACwC,eAAD,CAAP,CAAyB3B,SAAzB,CAAf","sourcesContent":["import React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nimport Header from \"../../components/Header/Header.jsx\";\nimport Footer from \"../../components/Footer/Footer.jsx\";\nimport Sidebar from \"../../components/Sidebar/Sidebar.jsx\";\n// import FixedPlugin from \"../../components/FixedPlugin/FixedPlugin.jsx\";\n\nimport dashboardRoutes from \"../../routes/dashboard\";\n\n// View\nimport Dashboards from \"../../views/Dashboard/Dashboard.jsx\";\nimport Notifications from \"../../views/Notifications/Notifications.jsx\";\nimport Icons from \"../../views/Icons/Icons.jsx\";\nimport Typography from \"../../views/Typography/Typography.jsx\";\nimport TableList from \"../../views/TableList/TableList.jsx\";\nimport Maps from \"../../views/Maps/Maps.jsx\";\nimport UserPage from \"../../views/UserPage/UserPage.jsx\";\n\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\",\n    }\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.mainPanel);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      this.refs.mainPanel.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  }\n  handleActiveClick = (color) => {\n    this.setState({ activeColor: color });\n  }\n  handleBgClick = (color) => {\n    this.setState({ backgroundColor: color });\n  }\n  render() {\n    let routes = <Redirect to=\"/login\" />;\n\n    if (this.props.isAuth) {   \n      routes = (\n        <Switch>\n          <Route path=\"/dashboard\" exact component={Dashboards} />\n          <Route path=\"/dashboard/icons\" exact component={Maps} />\n          <Route path=\"/dashboard/maps\" exact component={Maps} />\n          <Route path=\"/dashboard/notifications\" exact component={Notifications} />\n          <Route path=\"/dashboard/user-page\" exact component={UserPage} />\n          <Route path=\"/dashboard/tables\" exact component={TableList} />\n          <Route path=\"/dashboard/typography\" exact component={Typography} />\n        </Switch>\n      );\n     \n    }\n\n    return (\n      <div className=\"wrapper\">\n        <Sidebar\n          {...this.props}\n          routes={dashboardRoutes}\n          bgColor={this.state.backgroundColor}\n          activeColor={this.state.activeColor}\n        />\n        <div className=\"main-panel\" ref=\"mainPanel\">\n          <Header {...this.props} />\n          {routes}   \n          \n          \n          \n          {/* <Switch>                      \n            {dashboardRoutes.map((prop, key) => {              \n              if (prop.pro) {\n                return null;\n              }              \n              if (prop.redirect) {\n                return <Redirect from={prop.path} to={prop.pathTo} key={key} />;\n              }\n              return (\n                <Route path={prop.path} exact component={prop.component} key={key} />\n              );\n            })}\n          </Switch> */}\n\n\n          <Footer fluid />\n        </div>\n        {/* <FixedPlugin\n          bgColor={this.state.backgroundColor}\n          activeColor={this.state.activeColor}\n          handleActiveClick={this.handleActiveClick}\n          handleBgClick={this.handleBgClick}\n        /> */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {  \n  return {\n    isAuth : state.authsd.token !== null\n  }\n};\n\nexport default connect(mapStateToProps)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}
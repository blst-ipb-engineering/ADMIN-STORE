{"ast":null,"code":"import _classCallCheck from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bagus/Documents/GitHub/ADMIN-STORE/src/layouts/Dashboard/Dashboard.jsx\";\nimport React from \"react\"; // javascript plugin used to create scrollbars on windows\n\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport Header from \"../../components/Header/Header.jsx\";\nimport Footer from \"../../components/Footer/Footer.jsx\";\nimport Sidebar from \"../../components/Sidebar/Sidebar.jsx\"; // import FixedPlugin from \"../../components/FixedPlugin/FixedPlugin.jsx\";\n\nimport * as actionCreator from '../../store/action/index'; //View\n\nimport ProductEditor from '../../views/Input/ProductEditor';\nimport dashboardRoutes from \"../../routes/dashboard\";\nvar ps;\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.handleActiveClick = function (color) {\n      _this.setState({\n        activeColor: color\n      });\n    };\n\n    _this.handleBgClick = function (color) {\n      _this.setState({\n        backgroundColor: color\n      });\n    };\n\n    _this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\"\n    };\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps = new PerfectScrollbar(this.refs.mainPanel);\n        document.body.classList.toggle(\"perfect-scrollbar-on\");\n      }\n\n      this.props.onTryAutoSignUp();\n      this.props.onSetAuthRedirectPath();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n        document.body.classList.toggle(\"perfect-scrollbar-on\");\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(e) {\n      if (e.history.action === \"PUSH\") {\n        this.refs.mainPanel.scrollTop = 0;\n        document.scrollingElement.scrollTop = 0;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Sidebar, Object.assign({}, this.props, {\n        routes: dashboardRoutes,\n        bgColor: this.state.backgroundColor,\n        activeColor: this.state.activeColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"main-panel\",\n        ref: \"mainPanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Header, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, dashboardRoutes.map(function (prop, key) {\n        if (prop.pro) {\n          return null;\n        }\n\n        if (prop.redirect) {\n          return React.createElement(Redirect, {\n            from: prop.path,\n            to: prop.pathTo,\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          });\n        }\n\n        if (!localStorage.getItem('token')) {\n          return React.createElement(Redirect, {\n            to: \"/login\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          });\n        }\n\n        return React.createElement(Route, {\n          path: prop.path,\n          exact: true,\n          component: prop.component,\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        });\n      }), React.createElement(Route, {\n        path: \"/product/new\",\n        exact: true,\n        component: ProductEditor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(Footer, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuth: state.authsd.token !== null,\n    authRedirectPath: state.authsd.authRedirectPath\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onTryAutoSignUp: function onTryAutoSignUp() {\n      return dispatch(actionCreator.authCheckState());\n    },\n    onSetAuthRedirectPath: function onSetAuthRedirectPath(path) {\n      return dispatch(actionCreator.setAuthRedirectPath(path));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["/Users/bagus/Documents/GitHub/ADMIN-STORE/src/layouts/Dashboard/Dashboard.jsx"],"names":["React","PerfectScrollbar","Route","Switch","Redirect","connect","Header","Footer","Sidebar","actionCreator","ProductEditor","dashboardRoutes","ps","Dashboard","props","handleActiveClick","color","setState","activeColor","handleBgClick","backgroundColor","state","navigator","platform","indexOf","refs","mainPanel","document","body","classList","toggle","onTryAutoSignUp","onSetAuthRedirectPath","destroy","e","history","action","scrollTop","scrollingElement","map","prop","key","pro","redirect","path","pathTo","localStorage","getItem","component","Component","mapStateToProps","isAuth","authsd","token","authRedirectPath","mapDispatchToProps","dispatch","authCheckState","setAuthRedirectPath"],"mappings":"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","sourcesContent":["import React from \"react\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nimport Header from \"../../components/Header/Header.jsx\";\nimport Footer from \"../../components/Footer/Footer.jsx\";\nimport Sidebar from \"../../components/Sidebar/Sidebar.jsx\";\n// import FixedPlugin from \"../../components/FixedPlugin/FixedPlugin.jsx\";\nimport * as actionCreator from '../../store/action/index';\n\n//View\nimport ProductEditor from '../../views/Input/ProductEditor';\n\n\n\nimport dashboardRoutes from \"../../routes/dashboard\";\n\n\n\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      backgroundColor: \"black\",\n      activeColor: \"info\",\n    }\n  }\n\n  componentDidMount() {    \n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.mainPanel);\n      document.body.classList.toggle(\"perfect-scrollbar-on\");      \n    }    \n    \n    this.props.onTryAutoSignUp();\n    this.props.onSetAuthRedirectPath();\n    \n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.body.classList.toggle(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      this.refs.mainPanel.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n    }\n  }\n  handleActiveClick = (color) => {\n    this.setState({ activeColor: color });\n  }\n  handleBgClick = (color) => {\n    this.setState({ backgroundColor: color });\n  }\n  render() {    \n       \n    return (\n      <div className=\"wrapper\">\n        <Sidebar\n          {...this.props}\n          routes={dashboardRoutes}\n          bgColor={this.state.backgroundColor}\n          activeColor={this.state.activeColor}\n        />\n        <div className=\"main-panel\" ref=\"mainPanel\">\n          <Header {...this.props} />\n          \n          <Switch>                      \n            {dashboardRoutes.map((prop, key) => {              \n              if (prop.pro) {\n                return null;\n              }              \n              if (prop.redirect) {\n                return <Redirect from={prop.path} to={prop.pathTo} key={key} />;\n              }\n             \n              if (!localStorage.getItem('token')) {\n                return <Redirect to='/login' />;    \n              }\n              return (\n                <Route path={prop.path} exact component={prop.component} key={key} />\n              );\n            })}\n            <Route path=\"/product/new\" exact component={ProductEditor} />\n          </Switch>\n\n\n          <Footer fluid />\n        </div>\n        {/* <FixedPlugin\n          bgColor={this.state.backgroundColor}\n          activeColor={this.state.activeColor}\n          handleActiveClick={this.handleActiveClick}\n          handleBgClick={this.handleBgClick}\n        /> */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {  \n  return {\n    isAuth : state.authsd.token !== null,\n    authRedirectPath: state.authsd.authRedirectPath\n  }\n};\n\nconst mapDispatchToProps = dispatch =>{  \n  return {\n    onTryAutoSignUp: () => dispatch(actionCreator.authCheckState()),\n    onSetAuthRedirectPath:  (path) =>dispatch(actionCreator.setAuthRedirectPath(path)),\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}
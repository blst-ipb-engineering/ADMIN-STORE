{"ast":null,"code":"import _objectSpread from \"/Users/bagus/Documents/GitHub/ADMIN-STORE/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as actionType from '../action/actionTypes';\nimport { updateObject } from '../uitlity';\nvar initialState = {\n  snackBarOption: {\n    isOpen: false,\n    text: '',\n    autoHideDuration: 100000000\n  },\n  isLoading: false,\n  toaster: {\n    isOpenToast: false,\n    toastMessage: null,\n    toastType: 'success'\n  }\n};\n\nvar ui = function ui() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionType.TOGGLE_NOTIFICATION:\n      return updateObject(state, {\n        snackBarOption: _objectSpread({}, action.payload)\n      });\n\n    case actionType.TOGGLE_LOADING:\n      return updateObject(state, {\n        isLoading: action.data\n      });\n\n    case actionType.TOGGLE_TOASTER:\n      return updateObject(state, {\n        toaster: _objectSpread({}, action.payload)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default ui;","map":{"version":3,"sources":["/Users/bagus/Documents/GitHub/ADMIN-STORE/src/store/reducer/ui-reducer.js"],"names":["actionType","updateObject","initialState","snackBarOption","isOpen","text","autoHideDuration","isLoading","toaster","isOpenToast","toastMessage","toastType","ui","state","action","type","TOGGLE_NOTIFICATION","payload","TOGGLE_LOADING","data","TOGGLE_TOASTER"],"mappings":";AAAA,OAAO,KAAKA,UAAZ,MAA4B,uBAA5B;AACA,SAAQC,YAAR,QAA2B,YAA3B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,cAAc,EAAE;AACZC,IAAAA,MAAM,EAAE,KADI;AAEZC,IAAAA,IAAI,EAAE,EAFM;AAGZC,IAAAA,gBAAgB,EAAE;AAHN,GADC;AAMjBC,EAAAA,SAAS,EAAE,KANM;AAOjBC,EAAAA,OAAO,EAAE;AAAGC,IAAAA,WAAW,EAAE,KAAhB;AACGC,IAAAA,YAAY,EAAE,IADjB;AAEGC,IAAAA,SAAS,EAAC;AAFb;AAPQ,CAArB;;AAaA,IAAMC,EAAE,GAAG,SAALA,EAAK,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBX,YAAyB;AAAA,MAAXY,MAAW;;AACzC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAMf,UAAU,CAACgB,mBAAjB;AACI,aAAOf,YAAY,CAACY,KAAD,EAAQ;AACvBV,QAAAA,cAAc,oBACPW,MAAM,CAACG,OADA;AADS,OAAR,CAAnB;;AAKJ,SAAMjB,UAAU,CAACkB,cAAjB;AACI,aAAOjB,YAAY,CAACY,KAAD,EAAQ;AACvBN,QAAAA,SAAS,EAACO,MAAM,CAACK;AADM,OAAR,CAAnB;;AAGJ,SAAMnB,UAAU,CAACoB,cAAjB;AACI,aAAOnB,YAAY,CAACY,KAAD,EAAQ;AACvBL,QAAAA,OAAO,oBACAM,MAAM,CAACG,OADP;AADgB,OAAR,CAAnB;;AAMA;AACJ,aAAOJ,KAAP;AAnBJ;AAqBH,CAtBD;;AAyBA,eAAeD,EAAf","sourcesContent":["import * as actionType from '../action/actionTypes';\nimport {updateObject} from '../uitlity';\n\nconst initialState = {\n    snackBarOption: {\n        isOpen: false,\n        text: '',\n        autoHideDuration: 100000000\n    },\n    isLoading: false,\n    toaster: {  isOpenToast: false,\n                toastMessage: null,\n                toastType:'success', \n            }\n}\n\nconst ui = (state = initialState, action) => {    \n    switch(action.type){\n        case (actionType.TOGGLE_NOTIFICATION) :\n            return updateObject(state, {\n                snackBarOption:{                \n                    ...action.payload\n                },                 \n            });\n        case (actionType.TOGGLE_LOADING) :\n            return updateObject(state, {\n                isLoading:action.data                 \n            });\n        case (actionType.TOGGLE_TOASTER) :\n            return updateObject(state, {\n                toaster:{\n                    ...action.payload\n                }                 \n            });\n        \n            default:       \n        return state;\n    }\n}\n\n\nexport default ui;"]},"metadata":{},"sourceType":"module"}